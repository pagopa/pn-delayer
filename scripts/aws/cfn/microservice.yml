AWSTemplateFormatVersion: 2010-09-09
Description: 'Microservice deploy for pn-delayer'

Parameters:
  ProjectName:
    Type: String
    Description: 'Usually pn can be pnXYZ where XYZ are the feature number, useful to create
      experimental environments without crash official development environment'

  AlarmSNSTopicArn:
    Type: String
    Description: ARN of alarm topic

  WebApiDnsName:
    Type: String
    Description: 'The DNS name used for WEB rest API.'
  
  CorsAllowedDomains:
    Type: String
    Description: 'Comma separated list of domains allowed to make cross origin request'

  ContainerImageUri:
    Type: String
    Description: 'Exact container image URI with full repository and image digest'

  MicroserviceNumber:
    Type: Number
    Description: 'Disambiguation useful for load balancer rules'

  TemplateBucketBaseUrl:
    Type: String
    Description: 'The S3 bucket from which to fetch the templates used by this stack.'

  ECSClusterName:
    Type: String
    Description: 'The name of the ECS cluster where the microservice is going to be deployed'

  SubnetsIds:
    Type: String
    Description: 'subnets ids comma separated list. Where to deploy the microservice'

  VpcId:
    Type: String
    Description: 'VpcId where the microservice is going to be deployed'
  
  EcsDefaultSecurityGroup:
    Type: String
    Description: 'Default security group required by infrastructure'

  ApplicationLoadBalancerListenerArn:
    Type: String
    Description: 'Load balancer listener where HTTP endpoints is going to be registered'

  ApplicationLoadBalancerDomain:
    Type: String
    Description: 'Base URL of the load balancer where the service is going to be reachable'

  NetworkLoadBalancerLink:
    Type: String
    Description: 'network load balancer link for API-GW'
  
  LogsKinesisSourceStreamArn:
    Type: String
    Description: 'Kinesis stream that receive logs'
  
  Version:
    Type: String
    Description: 'keep track of used projects commitIds'

  PaperDeliveryDriverCapacitiesTableName:
    Type: String
    Description: 'DynamoDB table name for PaperDeliveryDriverCapacities'

  PaperDeliveryDriverCapacitiesTableArn:
    Type: String
    Description: 'ARN of dynamodb table containing PaperDeliveryDriverCapacities'

  PaperDeliveryDriverUsedCapacitiesTableName:
    Type: String
    Description: 'DynamoDB table name for  PaperDeliveryDriverUsedCapacities'

  PaperDeliveryDriverUsedCapacitiesTableArn:
    Type: String
    Description: 'ARN of dynamodb table containing  PaperDeliveryDriverUsedCapacities'

  PaperDeliveryKinesisEventTableName:
    Type: String
    Description: 'DynamoDB table name for PaperDeliveryKinesisEvent'

  PaperDeliveryCounterTableName:
    Type: String
    Description: 'DynamoDB table name for PaperDeliveryCounter'

  PaperDeliveryCounterTableArn:
    Type: String
    Description: 'ARN of dynamodb table containing PaperDeliveryCounter'

  PaperDeliveryKinesisEventTableArn:
    Type: String
    Description: 'ARN of dynamodb table containing PaperDeliveryKinesisEvent'

  PaperDeliveryTableName:
    Type: String
    Description: Name of dynamodb table containing paper deliveries workflow

  PaperDeliveryTableArn:
    Type: String
    Description: ARN of dynamodb table containing paper deliveries workflow

  PaperDeliveryTableStreamArn:
    Type: String
    Description: 'ARN of dynamodb table stream containing paper deliveries workflow'

  PaperDeliveryQueryLimit:
    Type: Number
    Default: 1000
    Description: 'Query limit for paper delivery table'

  PaperDeliverySenderLimitTableName:
    Type: String
    Description: 'DynamoDB table name for PaperDeliverySenderLimit'

  PaperDeliverySenderLimitTableArn:
    Type: String
    Description: 'ARN of dynamodb table containing PaperDeliverySenderLimit'

  PaperDeliveryUsedSenderLimitTableName:
    Type: String
    Description: 'DynamoDB table name for PaperDeliveryUsedSenderLimit'

  PaperDeliveryUsedSenderLimitTableArn:
    Type: String
    Description: 'ARN of dynamodb table containing PaperDeliveryUsedSenderLimit'

  DeliveryDateDayOfWeek:
    Type: Number
    Description: 'Day of the week for capacity (0=Sunday, 1=Monday, 2=Tuesday, 3=Wednesday, 4=Thursday, 5=Friday, 6=Saturday)'
    Default: 1

  PrintCapacityWeeklyWorkingDays:
    Type: Number
    Description: 'Number of working days in a week'
    Default: 7

  DeliveryDateInterval:
    Type: String
    Description: 'Interval for deliveryDate setting'
    Default: 1d

  PaperDeliveryCutOffDuration:
    Type: String
    Description: 'Cut off duration for paper delivery. available value = 7d (weekly cut-off), 0d (no cut-off))'
    Default: 7d

  PaperDeliveryKinesisRecordsTtlSeconds:
    Type: Number
    Description: 'Kinesis sequence number TTL duration for paper delivery.'
    Default: 86400 # 1 day in seconds

  PaperDeliveryCounterTtlDays:
    Type: Number
    Description: 'Kinesis sequence number TTL duration in days for paper delivery.'
    Default: 14

  VpcCidr:
    Type: String
    Description: 'VPC Cidr default'

  SenderLimitJobLogGroup:
    Type: String
    Description: 'SenderLimit job log group name'

  DriverCapacityJobLogGroup:
    Type: String
    Description: 'DriverCapacity job log group name'

  ResidualCapacityJobLogGroup:
    Type: String
    Description: 'ResidualCapacity job log group name'

  MaxvCpus:   ##TODEFINE in order to set the max number of parallel jobs
    Type: String
    Default: 8
    Description: The maximum number of Amazon EC2 vCPUs that an environment can reach.

  VCPU:     ##TODEFINE in order to set the max number of parallel jobs
    Type: String
    Default: 0.25
    Description: The number of vCPUs reserved for the container.

  ComputeResourceType:
    Type: String
    Default: FARGATE
    AllowedValues:
      - FARGATE_SPOT
      - FARGATE
    Description: Enter FARGATE_SPOT or FARGATE.

  Memory:
    Type: String
    Default: 2048
    Description: The memory hard limit (in MiB) present to the container.

  PnDelayerInputsKinesisDataStreamArn:
    Type: String
    Description: 'pn-delayer_inputs kinesis stream ARN'

  PnDelayerInputsKinesisDataStreamKMSArn:
    Type: String
    Description: 'pn-delayer_inputs kinesis stream KMS ARN'

  JobInputUnifiedDeliveryDriver:
    Type: String
    Default: ' '
    Description: 'Input unifiedDeliveryDriver for the driver capacity job'

  WorkflowStep:
    Type: String
    Default: ' '
    Description: 'Workflow step for delayer jobs - one of: EVALUATE_SENDER_LIMIT,EVALUATE_RESIDUAL_CAPACITY,EVALUATE_DRIVER_CAPACITY'

  JobInputProvinceList:
    Type: String
    Default: ' '
    Description: 'Input Province list for the driver capacity job'

  ActualTenderId:
    Type: String
    Default: ' '
    Description: 'TenderId for the driver capacity job'

  JobInputProvince:
    Type: String
    Default: ' '
    Description: 'Input Province for the sender limit job'

  # OpenApi Bucket params
  MicroserviceBucketName:
    Type: String
    Default: ''
    Description: 'Name of the bucket where the microservice files are copied during deploy'

  MicroserviceBucketBaseKey:
    Type: String
    Default: ''
    Description: 'Base key of the microservice in the s3 bucket'

  LambdaRuntime:
    Type: String
    Default: nodejs20.x
    Description: Runtime for Lambdas.

  KinesisPaperDeliveryLambdaDLQARN:
    Type: String
    Description: 'DLQ ARN for KinesisPaperDeliveryLambda'

  KinesisPaperDeliveryLambdaMaxRetry:
    Type: Number
    Default: 1
    Description: 'Maximum retry attempts for KinesisPaperDeliveryLambda'

  KinesisPaperDeliveryLambdaBatchSize:
    Type: Number
    Default: 25
    Description: 'Batch size for KinesisPaperDeliveryLambda'

  KinesisPaperDeliveryLambdaName:
    Type: String
    Description: 'PaperDeliveryLambda function name'

  KinesisPaperDeliveryLambdaMaxBatchWindowInSeconds:
    Type: Number
    Default: 20
    Description: 'Maximum batching window in seconds for KinesisPaperDeliveryLambda'

  DelayerToPaperChannelLambdaName:
    Type: String
    Description: 'DelayerToPaperChannelLambda function name'

  DelayerToPaperChannelQueueARN:
    Type: String
    Description: Events from pn-delayer TO pn-paper-channel queue ARN

  DelayerToPaperChannelQueueQueueURL:
    Type: String
    Description: Events from pn-delayer TO pn-paper-channel queue URL

  DelayerToPaperChannelRuleState:
    Type: String
    Default: DISABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: 'State of the DelayerToPaperChannelRule'

  PaperDeliveryPriorityParameterName:
    Type: String
    Description: 'parameter name for paper delivery priority details'

  TestDelayerBucketName:
    Type: String
    Description: 'Name of bucket for delayer tests automation'

  TestDelayerBucketArn:
    Type: String
    Description: 'Arn of bucket for delayer tests automation'

  TestDelayerKmsBucketArn:
    Type: String
    Description: 'Arn of kms bucket for delayer tests automation'

  TestDelayerObjectKeyBucket:
    Type: String
    Description: 'TestDelayerLambda object key of bucket'
    Default: 'example.csv'

  TestDelayerLambdaName:
    Type: String
    Description: 'TestDelayerLambda function name'

  UnifiedDeliveryDriverProvinceParameter:
    Type: String
    Description: 'Parameter name for UnifiedDeliveryDriverProvinceParameter'

  DelayerStartWorkflowCron:
    Type: String
    Default: '0 3 ? * MON *'
    Description: 'Cron expression for DelayerStartWorkflowRule'

  DelayerToPaperChannelDailyScheduleCron:
    Type: String
    Default: '0 9 * * ? *'
    Description: 'Cron expression for DelayerToPaperChannelDailyScheduleRule'

  DelayerStartWorkflowRuleState:
    Type: String
    Default: DISABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: 'State of the DelayerStartWorkflowRule'

  DelayerToPaperChannelDailyScheduleRuleState:
    Type: String
    Default: DISABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: 'State of the DelayerToPaperChannelDailyScheduleRuleState'

  ProvinceTableName:
    Type: String
    Description: 'DynamoDB table name for Province'

  ProvinceTableArn:
    Type: String
    Description: 'ARN of DynamoDB table containing Province'

  PaperChannelTenderApiLambdaArn:
    Type: String
    Description: 'PaperChannelTenderApiLambda function name'

  DelayerReceiverOrdersSendersLambdaName:
    Type: String
    Description: 'ReceiverOrdersSendersLambda function name'

  SafeStorageCxId:
    Type: String
    Description: 'SafeStorage cx-id for pn-Delayer request'

  SandboxSafeStorageBaseUrl:
    Type: String
    Description: 'Url to the SafeStorage microservice'

  SafeStorageToDelayerReceiverOrdersSendersLambdaQueueQueueName:
    Type: String
    Description: 'queue name for safeStorage to delayer receiver orders senders lambda'

  SafeStorageToDelayerReceiverOrdersSendersLambdaQueueARN:
    Type: String
    Description: 'queue arn for safeStorage to delayer receiver orders senders lambda'

  SafeStorageToDelayerReceiverOrdersSendersLambdaQueueURL:
    Type: String
    Description: 'Events from safe storage to pn-delayer queue URL'

  DelayerReceiverOrdersSendersLambdaMaxRetry:
    Type: Number
    Default: 3
    Description: 'Maximum retry attempts for received message for DelayerReceiverOrdersSendersLambdaQueue'

  PrintCounterTtlDuration:
    Type: String
    Default: 30d
    Description: 'Ttl duration for printCapacity counter'

  StepFunctionStateMaxAttempts:
    Type: Number
    Default: 2
    Description: 'Maximum number of attempts for step function state'

  PrintCapacity:
    Type: String
    Description: daily print capacity

Resources:
  SenderLimitComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      Type: MANAGED
      ServiceRole: !Ref SenderLimitServiceRole
      ComputeEnvironmentName: !Sub '${ProjectName}-delayer-sender-limit-compute-environment'
      ComputeResources:
        MaxvCpus: !Ref MaxvCpus
        Type: !Ref ComputeResourceType
        SecurityGroupIds:
          - !Ref SenderLimitSecurityGroup
        Subnets: !Split [ ",", !Ref SubnetsIds ]
      State: ENABLED

  SenderLimitJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      PropagateTags: true
      JobDefinitionName: !Sub '${ProjectName}-delayer-sender-limit-job-definition'
      ContainerProperties:
        Image: !Ref ContainerImageUri
        FargatePlatformConfiguration:
          PlatformVersion: LATEST
        ResourceRequirements:
          - Value: !Ref VCPU
            Type: VCPU
          - Value: !Ref Memory
            Type: MEMORY
        JobRoleArn: !GetAtt "SenderLimitTaskExecutionRole.Arn"
        ExecutionRoleArn: !GetAtt "SenderLimitTaskExecutionRole.Arn"
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-group: !Ref "SenderLimitJobLogGroup"
            awslogs-region: !Ref AWS::Region
            awslogs-stream-prefix: !Sub '${ProjectName}-delayer-sender-limit-job-logs'
        Environment:
          - Name: AWS_REGIONCODE
            Value: !Ref AWS::Region
          - Name: PN_DELAYER_PAPERDELIVERYPRIORITYPARAMETERNAME
            Value: !Ref PaperDeliveryPriorityParameterName
          - Name: PN_DELAYER_DAO_PAPERDELIVERYQUERYLIMIT
            Value: !Ref PaperDeliveryQueryLimit
          - Name: PN_DELAYER_DAO_PAPERDELIVERYCOUNTERTABLENAME
            Value: !Ref PaperDeliveryCounterTableName
          - Name: PN_DELAYER_DAO_PAPERDELIVERYSENDERLIMITTABLENAME
            Value: !Ref PaperDeliverySenderLimitTableName
          - Name: PN_DELAYER_DAO_PAPERDELIVERYUSEDSENDERLIMITTABLENAME
            Value: !Ref PaperDeliveryUsedSenderLimitTableName
          - Name: PN_DELAYER_DAO_PAPERDELIVERYDRIVERCAPACITIESTABLENAME
            Value: !Ref PaperDeliveryDriverCapacitiesTableName
          - Name: PN_DELAYER_DAO_PAPERDELIVERYTABLENAME
            Value: !Ref PaperDeliveryTableName
          - Name: PN_DELAYER_EVALUATESENDERLIMITJOBINPUT_PROVINCE
            Value: !Ref JobInputProvince
          - Name: PN_DELAYER_ACTUALTENDERID
            Value: !Ref ActualTenderId
          - Name: PN_DELAYER_WORKFLOWSTEP
            Value: !Ref WorkflowStep
          - Name: PN_DELAYER_PAPERCHANNELTENDERAPILAMBDAARN
            Value: !Ref PaperChannelTenderApiLambdaArn
          - Name: PN_DELAYER_DELIVERYDATEDAYOFWEEK
            Value: !Ref DeliveryDateDayOfWeek
          - Name: PN_DELAYER_PRINTCAPACITY
            Value: !Ref PrintCapacity

      PlatformCapabilities:
        - FARGATE
      Tags:
        Service: Batch
        Name: JobDefinitionTag
        Expected: MergeTag

  SenderLimitJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref SenderLimitComputeEnvironment
      State: ENABLED
      Priority: 1
      JobQueueName: pn-delayer-sender-limit-job-queue

  SenderLimitServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: batch.amazonaws.com
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole

  SenderLimitTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-delayer-sender-limit-taskexec-role'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: "sts:AssumeRole"
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
      Path: /
      Policies:
        - PolicyName: AmazonECSTaskExecutionRolePolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "ecr:GetAuthorizationToken"
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:BatchGetImage"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"
              - Effect: Allow
                Action:
                  - dynamodb:Query
                  - dynamodb:BatchGetItem
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:BatchWriteItem
                Resource:
                  - !Sub "${PaperDeliveryCounterTableArn}"
                  - !Sub "${PaperDeliveryCounterTableArn}/*"
                  - !Sub "${PaperDeliverySenderLimitTableArn}"
                  - !Sub "${PaperDeliverySenderLimitTableArn}/*"
                  - !Sub "${PaperDeliveryUsedSenderLimitTableArn}"
                  - !Sub "${PaperDeliveryUsedSenderLimitTableArn}/*"
                  - !Sub "${PaperDeliveryDriverCapacitiesTableArn}"
                  - !Sub "${PaperDeliveryDriverCapacitiesTableArn}/*"
                  - !Sub "${PaperDeliveryTableArn}"
                  - !Sub "${PaperDeliveryTableArn}/*"
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !Ref PaperChannelTenderApiLambdaArn
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                Resource:
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${PaperDeliveryPriorityParameterName}


  SenderLimitSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Batch Security Group
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: !Ref VpcCidr
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: "0.0.0.0/0"

  ResidualCapacityComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      Type: MANAGED
      ServiceRole: !Ref ResidualCapacityServiceRole
      ComputeEnvironmentName: !Sub '${ProjectName}-delayer-residual-capacity-compute-environment'
      ComputeResources:
        MaxvCpus: !Ref MaxvCpus
        Type: !Ref ComputeResourceType
        SecurityGroupIds:
          - !Ref ResidualCapacitySecurityGroup
        Subnets: !Split [ ",", !Ref SubnetsIds ]
      State: ENABLED

  ResidualCapacityJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      PropagateTags: true
      JobDefinitionName: !Sub '${ProjectName}-delayer-residual-capacity-job-definition'
      ContainerProperties:
        Image: !Ref ContainerImageUri
        FargatePlatformConfiguration:
          PlatformVersion: LATEST
        ResourceRequirements:
          - Value: !Ref VCPU
            Type: VCPU
          - Value: !Ref Memory
            Type: MEMORY
        JobRoleArn: !GetAtt "ResidualCapacityTaskExecutionRole.Arn"
        ExecutionRoleArn: !GetAtt "ResidualCapacityTaskExecutionRole.Arn"
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-group: !Ref "ResidualCapacityJobLogGroup"
            awslogs-region: !Ref AWS::Region
            awslogs-stream-prefix: !Sub '${ProjectName}-delayer-residual-capacity-logs'
        Environment:
          - Name: PN_DELAYER_DAO_PAPERDELIVERYDRIVERCAPACITIESTABLENAME
            Value: !Ref PaperDeliveryDriverCapacitiesTableName
          - Name: PN_DELAYER_DAO_PAPERDELIVERYDRIVERUSEDCAPACITIESTABLENAME
            Value: !Ref PaperDeliveryDriverUsedCapacitiesTableName
          - Name: PN_DELAYER_DAO_PAPERDELIVERYTABLENAME
            Value: !Ref PaperDeliveryTableName
          - Name: PN_DELAYER_DELIVERYDATEDAYOFWEEK
            Value: !Ref DeliveryDateDayOfWeek
          - Name: AWS_REGIONCODE
            Value: !Ref AWS::Region
          - Name: PN_DELAYER_EVALUATERESIDUALCAPACITYJOBINPUT_UNIFIEDDELIVERYDRIVER
            Value: !Ref JobInputUnifiedDeliveryDriver
          - Name: PN_DELAYER_EVALUATERESIDUALCAPACITYJOBINPUT_PROVINCELIST
            Value: !Ref JobInputProvinceList
          - Name: PN_DELAYER_ACTUALTENDERID
            Value: !Ref ActualTenderId
          - Name: PN_DELAYER_WORKFLOWSTEP
            Value: !Ref WorkflowStep
          - Name: PN_DELAYER_PRINTCAPACITYWEEKLYWORKINGDAYS
            Value: !Ref PrintCapacityWeeklyWorkingDays
          - Name: PN_DELAYER_PRINTCOUNTERTTLDURATION
            Value: !Ref PrintCounterTtlDuration
          - Name: PN_DELAYER_DAO_PAPERDELIVERYQUERYLIMIT
            Value: !Ref PaperDeliveryQueryLimit
          - Name: PN_DELAYER_DAO_PAPERDELIVERYCOUNTERTABLENAME
            Value: !Ref PaperDeliveryCounterTableName
          - Name: PN_DELAYER_PRINTCAPACITY
            Value: !Ref PrintCapacity

      PlatformCapabilities:
        - FARGATE
      Tags:
        Service: Batch
        Name: JobDefinitionTag
        Expected: MergeTag

  ResidualCapacityJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref ResidualCapacityComputeEnvironment
      State: ENABLED
      Priority: 1
      JobQueueName: pn-delayer-residual-capacity-job-queue

  ResidualCapacityServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: batch.amazonaws.com
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole

  ResidualCapacityTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-delayer-residual-capacity-taskexec-role'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: "sts:AssumeRole"
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
      Path: /
      Policies:
        - PolicyName: AmazonECSTaskExecutionRolePolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "ecr:GetAuthorizationToken"
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:BatchGetImage"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"
              - Effect: Allow
                Action:
                  - dynamodb:Query
                  - dynamodb:BatchGetItem
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:BatchWriteItem
                Resource:
                  - !Sub "${PaperDeliveryDriverCapacitiesTableArn}"
                  - !Sub "${PaperDeliveryDriverCapacitiesTableArn}/*"
                  - !Sub "${PaperDeliveryDriverUsedCapacitiesTableArn}"
                  - !Sub "${PaperDeliveryDriverUsedCapacitiesTableArn}/*"
                  - !Sub "${PaperDeliveryTableArn}"
                  - !Sub "${PaperDeliveryTableArn}/*"
                  - !Sub "${PaperDeliveryCounterTableArn}"
                  - !Sub "${PaperDeliveryCounterTableArn}/*"

  ResidualCapacitySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Batch Security Group
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: !Ref VpcCidr
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: "0.0.0.0/0"

  DriverCapacityComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      Type: MANAGED
      ServiceRole: !Ref DriverCapacityServiceRole
      ComputeEnvironmentName: !Sub '${ProjectName}-delayer-driver-capacity-compute-environment'
      ComputeResources:
        MaxvCpus: !Ref MaxvCpus
        Type: !Ref ComputeResourceType
        SecurityGroupIds:
          - !Ref DriverCapacitySecurityGroup
        Subnets: !Split [",", !Ref SubnetsIds]
      State: ENABLED

  DriverCapacityJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      PropagateTags: true
      JobDefinitionName: !Sub '${ProjectName}-delayer-driver-capacity-job-definition'
      ContainerProperties:
        Image: !Ref ContainerImageUri
        FargatePlatformConfiguration:
          PlatformVersion: LATEST
        ResourceRequirements:
          - Value: !Ref VCPU
            Type: VCPU
          - Value: !Ref Memory
            Type: MEMORY
        JobRoleArn: !GetAtt "DriverCapacityTaskExecutionRole.Arn"
        ExecutionRoleArn: !GetAtt "DriverCapacityTaskExecutionRole.Arn"
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-group: !Ref "DriverCapacityJobLogGroup"
            awslogs-region: !Ref AWS::Region
            awslogs-stream-prefix: !Sub '${ProjectName}-delayer-driver-capacity-logs'
        Environment:
          - Name: PN_DELAYER_DAO_PAPERDELIVERYDRIVERCAPACITIESTABLENAME
            Value: !Ref PaperDeliveryDriverCapacitiesTableName
          - Name: PN_DELAYER_DAO_PAPERDELIVERYDRIVERUSEDCAPACITIESTABLENAME
            Value: !Ref PaperDeliveryDriverUsedCapacitiesTableName
          - Name: PN_DELAYER_DAO_PAPERDELIVERYTABLENAME
            Value: !Ref PaperDeliveryTableName
          - Name: PN_DELAYER_DELIVERYDATEDAYOFWEEK
            Value: !Ref DeliveryDateDayOfWeek
          - Name: AWS_REGIONCODE
            Value: !Ref AWS::Region
          - Name: PN_DELAYER_EVALUATEDRIVERCAPACITYJOBINPUT_UNIFIEDDELIVERYDRIVER
            Value: !Ref JobInputUnifiedDeliveryDriver
          - Name: PN_DELAYER_EVALUATEDRIVERCAPACITYJOBINPUT_PROVINCELIST
            Value: !Ref JobInputProvinceList
          - Name: PN_DELAYER_ACTUALTENDERID
            Value: !Ref ActualTenderId
          - Name: PN_DELAYER_WORKFLOWSTEP
            Value: !Ref WorkflowStep
          - Name: PN_DELAYER_PRINTCAPACITYWEEKLYWORKINGDAYS
            Value: !Ref PrintCapacityWeeklyWorkingDays
          - Name: PN_DELAYER_PRINTCOUNTERTTLDURATION
            Value: !Ref PrintCounterTtlDuration
          - Name: PN_DELAYER_DAO_PAPERDELIVERYQUERYLIMIT
            Value: !Ref PaperDeliveryQueryLimit
          - Name: PN_DELAYER_DAO_PAPERDELIVERYCOUNTERTABLENAME
            Value: !Ref PaperDeliveryCounterTableName
          - Name: PN_DELAYER_PRINTCAPACITY
            Value: !Ref PrintCapacity

      PlatformCapabilities:
        - FARGATE
      Tags:
        Service: Batch
        Name: JobDefinitionTag
        Expected: MergeTag

  ## JobQueue
  DriverCapacityJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref DriverCapacityComputeEnvironment
      State: ENABLED
      Priority: 1
      JobQueueName: !Sub '${ProjectName}-delayer-driver-capacity-job-queue'

  DriverCapacityServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: batch.amazonaws.com
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole

  DriverCapacityTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-delayer-driver-capacity-job-taskexec-role'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: "sts:AssumeRole"
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
      Path: /
      Policies:
        - PolicyName: AmazonECSTaskExecutionRolePolicy
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                - "ecr:GetAuthorizationToken"
                - "ecr:BatchCheckLayerAvailability"
                - "ecr:GetDownloadUrlForLayer"
                - "ecr:BatchGetImage"
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
              Resource: "*"
            - Effect: Allow
              Action:
                - dynamodb:Query
                - dynamodb:BatchGetItem
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:BatchWriteItem
              Resource:
                - !Sub "${PaperDeliveryDriverCapacitiesTableArn}"
                - !Sub "${PaperDeliveryDriverCapacitiesTableArn}/*"
                - !Sub "${PaperDeliveryDriverUsedCapacitiesTableArn}"
                - !Sub "${PaperDeliveryDriverUsedCapacitiesTableArn}/*"
                - !Sub "${PaperDeliveryTableArn}"
                - !Sub "${PaperDeliveryTableArn}/*"
                - !Sub "${PaperDeliveryCounterTableArn}"
                - !Sub "${PaperDeliveryCounterTableArn}/*"

  DriverCapacitySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Batch Security Group
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: !Ref VpcCidr
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: "0.0.0.0/0"

  DelayerMicroserviceCloudWatchDashboard:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/microservice-cloudwatch-dashboard.yaml"
      Parameters:
        DashboardName: !Sub "${ProjectName}-delayer"
        DynamoDBTableNames: !Join
          - ','
          - - !Ref PaperDeliveryDriverCapacitiesTableName
            - !Ref PaperDeliveryDriverUsedCapacitiesTableName
            - !Ref PaperDeliveryTableName
            - !Ref PaperDeliveryCounterTableName
            - !Ref PaperDeliverySenderLimitTableName
            - !Ref PaperDeliveryUsedSenderLimitTableName
        LogGroupsNames: !Join
          - ','
          - - !Sub '/aws/ecs/${ProjectName}-delayer-sender-limit-job'
            - !Sub '/aws/ecs/${ProjectName}-delayer-residual-capacity-job'
            - !Sub '/aws/ecs/${ProjectName}-delayer-driver-capacity-job'

  PnDelayerAlarmTopicPublisherRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-delayer-alarm-topic-publisher-role'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: "sts:AssumeRole"
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
      Path: /
      Policies:
        - PolicyName: !Sub '${ProjectName}-delayer-alarm-topic-publisher-policy'
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "sns:Publish"
                Resource: !Ref AlarmSNSTopicArn

  ### Enable sending notifications to SNS topic when the job is in failed status.
  BatchBridgeStateRule:
   Type: AWS::Events::Rule
   Properties:
     Description: The EventBridge rule to match Batch state change
     RoleArn: !GetAtt PnDelayerAlarmTopicPublisherRole.Arn
     EventPattern:
       source:
         - aws.batch
       detail-type:
         - Batch Job State Change
       detail:
         status:
           - FAILED
         jobDefinition:
          - !Ref DriverCapacityJobDefinition
          - !Ref ResidualCapacityJobDefinition
          - !Ref SenderLimitJobDefinition
     State: ENABLED
     Targets:
       - Arn: !Ref AlarmSNSTopicArn
         Id: !Sub "${ProjectName}-delayer"

  # Create alarm
  FailedInvocationMetricAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${ProjectName}-delayer-FailedInvocation-Alarm"
      AlarmDescription: "CloudWatch alarm for when pn-delayer job fails."
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref AlarmSNSTopicArn
      OKActions:
        - !Ref AlarmSNSTopicArn
      Dimensions:
        - Name: RuleName
          Value: !Ref BatchBridgeStateRule
      DatapointsToAlarm: 1
      MetricName: "Invocations"
      Namespace: "AWS/Events"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 12 # 1 hour
      Period: 300 # 5 minutes
      Statistic: Sum
      Threshold: 1

  SenderLimitJobErrorFatalLogsMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref SenderLimitJobLogGroup
      FilterPattern: '?ERROR ?FATAL ?CRITICAL'
      MetricTransformations:
        - MetricValue: 1
          MetricNamespace: "ErrorFatalLogs"
          MetricName: !Sub "${ProjectName}-delayer-sender-limit-job-ErrorFatalMetric"

  SenderLimitErrorFatalLogsMetricAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn: SenderLimitJobErrorFatalLogsMetricFilter
    Properties:
      AlarmName: !Sub "${ProjectName}-delayer-sender-limit-job-ErrorFatalLogs-Alarm"
      AlarmDescription: "CloudWatch alarm for when LogSaver LogGroup has ERROR or FATAL line."
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref AlarmSNSTopicArn
      OKActions:
        - !Ref AlarmSNSTopicArn
      DatapointsToAlarm: 1
      MetricName: !Sub "${ProjectName}-delayer-sender-limit-job-ErrorFatalMetric"
      Namespace: "ErrorFatalLogs"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 60
      Period: 60
      Statistic: Sum
      Threshold: 1

  ResidualCapacityJobErrorFatalLogsMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref ResidualCapacityJobLogGroup
      FilterPattern: '?ERROR ?FATAL ?CRITICAL'
      MetricTransformations:
        - MetricValue: 1
          MetricNamespace: "ErrorFatalLogs"
          MetricName: !Sub "${ProjectName}-delayer-residual-capacity-job-ErrorFatalMetric"

  ResidualCapacityJobErrorFatalLogsMetricAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn: ResidualCapacityJobErrorFatalLogsMetricFilter
    Properties:
      AlarmName: !Sub "${ProjectName}-delayer-residual-capacity-ErrorFatalLogs-Alarm"
      AlarmDescription: "CloudWatch alarm for when LogSaver LogGroup has ERROR or FATAL line."
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref AlarmSNSTopicArn
      OKActions:
        - !Ref AlarmSNSTopicArn
      DatapointsToAlarm: 1
      MetricName: !Sub "${ProjectName}-delayer-residual-capacity-job-ErrorFatalMetric"
      Namespace: "ErrorFatalLogs"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 60
      Period: 60
      Statistic: Sum
      Threshold: 1

  DriverCapacityErrorFatalLogsMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref DriverCapacityJobLogGroup
      FilterPattern: '?ERROR ?FATAL ?CRITICAL'
      MetricTransformations:
        - MetricValue: 1
          MetricNamespace: "ErrorFatalLogs"
          MetricName: !Sub "${ProjectName}-delayer-ErrorFatalMetric"

  DriverCapacityErrorFatalLogsMetricAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn: DriverCapacityErrorFatalLogsMetricFilter
    Properties:
      AlarmName: !Sub "${ProjectName}-delayer-driver-capacity-job-ErrorFatalLogs-Alarm"
      AlarmDescription: "CloudWatch alarm for when LogSaver LogGroup has ERROR or FATAL line."
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref AlarmSNSTopicArn
      OKActions:
        - !Ref AlarmSNSTopicArn
      DatapointsToAlarm: 1
      MetricName: !Sub "${ProjectName}-delayer-driver-capacity-job-ErrorFatalMetric"
      Namespace: "ErrorFatalLogs"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 60
      Period: 60
      Statistic: Sum
      Threshold: 1

  PnCoreEventBusToDelayerInputsKinesis:
    Type: AWS::Events::Rule
    Properties:
      Description: Route Events from pn-core-event-bus to kinesis
      RoleArn: !GetAtt "DelayerInputsRole.Arn"
      EventBusName: !Sub '${ProjectName}-CoreEventBus'
      EventPattern:
        detail-type: [ "PreparePhaseOneOutcomeEvent" ]
      Targets:
        - Arn: !Ref PnDelayerInputsKinesisDataStreamArn
          Id: !Sub ${ProjectName}-DelayerInputsKinesisDataStream
          DeadLetterConfig:
            Arn: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:pn-CoreEventBus-DLQ

  # Send Safe Storage Response to delayerReceiverOrdersSendersLambda
  PnCoreEventBusToDelayerOrdersSendersSafeStorageResponseQueue:
    Type: AWS::Events::Rule
    Properties:
      Description: Route SafeStorage Events to pn-delayerReceiverOrdersSendersLambda
      RoleArn: !GetAtt "DelayerOrdersSendersEventBusEnqueueRole.Arn"
      EventBusName: !Sub '${ProjectName}-CoreEventBus'
      EventPattern:
        detail-type: [ "SafeStorageOutcomeEvent" ]
        detail:
          documentType: [ 'PN_SERVICE_ORDER' ]
      Targets:
        - Arn: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:PnCoreEventBusMatchedEventLogger
          Id: !Sub ${ProjectName}-Logger-SafeStore2DelayerOrdersSenders
          InputTransformer:
            InputPathsMap:
              "timestamp": "$.time"
            InputTemplate: |
              {
                  "timestamp": <timestamp>,
                  "ruleArn": <aws.events.rule-arn>,
                  "ruleName": <aws.events.rule-name>,
                  "ingestionTime": <aws.events.event.ingestion-time>,
                  "originalEvent": <aws.events.event.json>
              }
        - Id: !Sub '${ProjectName}-SafeStore2DelayerSendersOrders'
          Arn: !Ref SafeStorageToDelayerReceiverOrdersSendersLambdaQueueARN
          InputPath: $.detail
          DeadLetterConfig:
            Arn: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:pn-CoreEventBus-DLQ

  DelayerOrdersSendersEventBusEnqueueRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
        Version: "2012-10-17"
      Policies:
        - PolicyName: !Sub ${ProjectName}-delayer-orders-senders-eventBusRuleQueuePolicy
          PolicyDocument:
            Statement:
              - Sid: putEvents
                Action:
                  - sqs:ChangeMessageVisibility
                  - sqs:GetQueueAttributes
                  - sqs:GetQueueUrl
                  - sqs:SendMessage
                Effect: Allow
                Resource:
                  - !Ref SafeStorageToDelayerReceiverOrdersSendersLambdaQueueARN

  DelayerInputsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
        Version: "2012-10-17"
      Policies:
        - PolicyName: !Sub ${ProjectName}-DelayerInputs-eventBusRolePolicy
          PolicyDocument:
            Statement:
              - Sid: KMSAllowList
                Action:
                  - kms:Decrypt
                  - kms:Encrypt
                  - kms:GenerateDataKey
                Effect: Allow
                Resource:
                  - !Ref PnDelayerInputsKinesisDataStreamKMSArn
              - Sid: putEventsToKinesis
                Effect: Allow
                Action:
                  - kinesis:PutRecords
                  - kinesis:PutRecord
                Resource:
                  - !Ref PnDelayerInputsKinesisDataStreamArn

  #########################################################
  ###         KinesisPaperDeliveryLambda                ###
  #########################################################

  KinesisPaperDeliveryLambdaSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub '${KinesisPaperDeliveryLambdaName}-sec-group'
      VpcId: !Ref VpcId

#   Lambda function
  KinesisPaperDeliveryLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref KinesisPaperDeliveryLambdaName
      Runtime: !Ref LambdaRuntime
      Handler: "index.handler"
      Code:
        S3Bucket: !Ref MicroserviceBucketName
        S3Key: !Sub "${MicroserviceBucketBaseKey}/functions_zip/kinesisPaperDeliveryLambda.zip"
      Role: !GetAtt KinesisPaperDeliveryLambdaRole.Arn
      Environment:
        Variables:
          REGION: !Sub ${AWS::Region}
          KINESIS_PAPERDELIVERY_TABLE: !Ref PaperDeliveryTableName
          KINESIS_PAPERDELIVERY_EVENTTABLE: !Ref PaperDeliveryKinesisEventTableName
          KINESIS_PAPERDELIVERY_COUNTERTABLE: !Ref PaperDeliveryCounterTableName
          KINESIS_BATCHSIZE: !Ref KinesisPaperDeliveryLambdaBatchSize
          KINESIS_EVENTSRECORDTTLSECONDS: !Ref PaperDeliveryKinesisRecordsTtlSeconds
          KINESIS_PAPERDELIVERY_COUNTERTTLDAYS: !Ref PaperDeliveryCounterTtlDays
          KINESIS_PAPERDELIVERY_DELIVERYDATEDAYOFWEEK: !Ref DeliveryDateDayOfWeek
      TracingConfig:
        Mode: Active
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:339249233099:layer:LambdaInsightsExtension:13"
      Timeout: 15

#   Lambda function role
  KinesisPaperDeliveryLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-kinesisPaperDeliveryLambdaRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

#   Lambda function IAM policy
  KinesisPaperDeliveryLambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${ProjectName}-kinesisPaperDeliveryLambdaPolicy
      Roles:
        - !Ref KinesisPaperDeliveryLambdaRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kinesis:DescribeStream
              - kinesis:DescribeStreamSummary
              - kinesis:GetShardIterator
              - kinesis:GetRecords
              - kinesis:ListShards
              - kinesis:ListStreams
              - kinesis:SubscribeToShard
            Resource: !Ref PnDelayerInputsKinesisDataStreamArn
          - Effect: Allow
            Action: kms:Decrypt
            Resource: !Ref PnDelayerInputsKinesisDataStreamKMSArn
          - Effect: Allow
            Action: dynamodb:BatchWriteItem
            Resource:
              - !Ref PaperDeliveryTableArn
          - Effect: Allow
            Action: dynamodb:UpdateItem
            Resource:
              - !Ref PaperDeliveryCounterTableArn
          - Effect: Allow
            Action:
              - sqs:ChangeMessageVisibility
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:SendMessage
            Resource:
              !Ref KinesisPaperDeliveryLambdaDLQARN
          - Effect: Allow
            Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
            Resource: !Ref PaperDeliveryKinesisEventTableArn


  PaperDeliveryLambdaKinesisSource:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: !Sub ${KinesisPaperDeliveryLambdaBatchSize}
      BisectBatchOnFunctionError: true
      EventSourceArn: !Ref PnDelayerInputsKinesisDataStreamArn
      FunctionName: !Ref KinesisPaperDeliveryLambda
      FunctionResponseTypes:
        - ReportBatchItemFailures
      MaximumBatchingWindowInSeconds: !Sub ${KinesisPaperDeliveryLambdaMaxBatchWindowInSeconds}
      MaximumRetryAttempts: !Ref KinesisPaperDeliveryLambdaMaxRetry
      StartingPosition: TRIM_HORIZON
      DestinationConfig:
        OnFailure:
          Destination: !Ref KinesisPaperDeliveryLambdaDLQARN

  KinesisPaperDeliveryLambdaAlarms:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/lambda-alarms.yaml"
      Parameters:
        FunctionName: !Ref KinesisPaperDeliveryLambda
        AlarmSNSTopicArn: !Ref AlarmSNSTopicArn


  #########################################################
  ###         DelayerToPaperChannelLambda                ###
  #########################################################

  DelayerToPaperChannelLambdaSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub '${DelayerToPaperChannelLambdaName}-sec-group'
      VpcId: !Ref VpcId

  # Lambda function
  DelayerToPaperChannelLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref DelayerToPaperChannelLambdaName
      Runtime: !Ref LambdaRuntime
      Handler: "index.handler"
      Code:
        S3Bucket: !Ref MicroserviceBucketName
        S3Key: !Sub "${MicroserviceBucketBaseKey}/functions_zip/delayerToPaperChannelLambda.zip"
      Role: !GetAtt DelayerToPaperChannelLambdaRole.Arn
      Environment:
        Variables:
          REGION: !Sub ${AWS::Region}
          PAPER_DELIVERY_QUERYLIMIT: !Ref PaperDeliveryQueryLimit
          PN_DELAYER_DELIVERYDATEDAYOFWEEK: !Ref DeliveryDateDayOfWeek
      TracingConfig:
        Mode: Active
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:339249233099:layer:LambdaInsightsExtension:13"
      Timeout: 15

  # Lambda function role
  DelayerToPaperChannelLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-DelayerToPaperChannelLambdaRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  # Lambda function IAM policy
  DelayerToPaperChannelLambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${ProjectName}-DelayerToPaperChannelLambdaPolicy
      Roles:
        - !Ref DelayerToPaperChannelLambdaRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:Query
              - dynamodb:BatchWriteItem
              - dynamodb:DeleteItem
            Resource:
              - !Ref PaperDeliveryTableArn
          - Effect: Allow
            Action:
              - sqs:SendMessage
            Resource: !Ref  DelayerToPaperChannelQueueARN

  DelayerToPaperChannelLambdaAlarms:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/lambda-alarms.yaml"
      Parameters:
        FunctionName: !Ref DelayerToPaperChannelLambda
        AlarmSNSTopicArn: !Ref AlarmSNSTopicArn


  #########################################################
  ###         DelayerReceiverOrdersSendersLambda          ###
  #########################################################

  DelayerReceiverOrdersSendersLambdaSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub '${DelayerReceiverOrdersSendersLambdaName}-sec-group'
      VpcId: !Ref VpcId

  # Lambda function
  DelayerReceiverOrdersSendersLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref DelayerReceiverOrdersSendersLambdaName
      Runtime: !Ref LambdaRuntime
      Handler: "index.handler"
      Code:
        S3Bucket: !Ref MicroserviceBucketName
        S3Key: !Sub "${MicroserviceBucketBaseKey}/functions_zip/delayerReceiverOrdersSendersLambda.zip"
      Role: !GetAtt DelayerReceiverOrdersSendersLambdaRole.Arn
      Environment:
        Variables:
          REGION: !Sub ${AWS::Region}
          PN_SAFESTORAGE_URL: !Ref SandboxSafeStorageBaseUrl
          PN_SAFESTORAGE_CXID: !Ref SafeStorageCxId
          PAPER_CHANNEL_PROVINCE_TABLENAME: !Ref ProvinceTableName
          PAPER_DELIVERY_SENDER_LIMIT_TABLENAME: !Ref PaperDeliverySenderLimitTableName
          PAPER_DELIVERY_COUNTERS_TABLENAME: !Ref PaperDeliveryCounterTableName
      TracingConfig:
        Mode: Active
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:339249233099:layer:LambdaInsightsExtension:13"
      Timeout: 15
      VpcConfig:
        SubnetIds: !Split [ ",", !Ref SubnetsIds ]
        SecurityGroupIds:
          - !GetAtt DelayerReceiverOrdersSendersLambdaSecGroup.GroupId

  # Lambda function role
  DelayerReceiverOrdersSendersLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-DelayerReceiverOrdersSendersLambdaRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole

  # Lambda function IAM policy
  DelayerReceiverOrdersSendersLambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${ProjectName}-DelayerReceiverOrdersSendersLambdaPolicy
      Roles:
        - !Ref DelayerReceiverOrdersSendersLambdaRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:Query
              - dynamodb:BatchWriteItem
              - dynamodb:UpdateItem
            Resource:
              - !Sub "${ProvinceTableArn}"
              - !Sub "${ProvinceTableArn}/*"
              - !Sub "${PaperDeliverySenderLimitTableArn}"
              - !Sub "${PaperDeliverySenderLimitTableArn}/*"
              - !Sub "${PaperDeliveryCounterTableArn}"
              - !Sub "${PaperDeliveryCounterTableArn}/*"
          - Effect: Allow
            Action:
              - sqs:ChangeMessageVisibility
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:ReceiveMessage
            Resource:
              - !Ref SafeStorageToDelayerReceiverOrdersSendersLambdaQueueARN

  DelayerReceiverOrdersSendersLambdaAlarms:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/lambda-alarms.yaml"
      Parameters:
        FunctionName: !Ref DelayerReceiverOrdersSendersLambda
        AlarmSNSTopicArn: !Ref AlarmSNSTopicArn

  DelayerReceiverOrdersSendersLambdaSQSSource:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      EventSourceArn: !Ref SafeStorageToDelayerReceiverOrdersSendersLambdaQueueARN
      FunctionName: !Ref DelayerReceiverOrdersSendersLambda
      Enabled: true
      MaximumBatchingWindowInSeconds: 0

  #########################################################
  ###         TestDelayerLambda                ###
  #########################################################

  TestDelayerLambdaSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub '${TestDelayerLambdaName}-sec-group'
      VpcId: !Ref VpcId

  # Lambda function
  TestDelayerLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref TestDelayerLambdaName
      Runtime: !Ref LambdaRuntime
      Handler: "index.handler"
      Code:
        S3Bucket: !Ref MicroserviceBucketName
        S3Key: !Sub "${MicroserviceBucketBaseKey}/functions_zip/testDelayerLambda.zip"
      Role: !GetAtt TestDelayerLambdaRole.Arn
      Environment:
        Variables:
          REGION: !Sub ${AWS::Region}
          BUCKET_NAME: !Ref TestDelayerBucketName
          OBJECT_KEY: !Ref TestDelayerObjectKeyBucket
          SFN_ARN: !Ref PaperDeliveryStateMachine
          DELAYERTOPAPERCHANNEL_SFN_ARN: !Ref DelayerToPaperChannelStateMachine
      TracingConfig:
        Mode: Active
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:339249233099:layer:LambdaInsightsExtension:13"
      Timeout: 15

  # Lambda function role
  TestDelayerLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-testDelayerLambdaRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  # Lambda function IAM policy
  TestDelayerLambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${ProjectName}-testDelayerLambdaPolicy
      Roles:
        - !Ref TestDelayerLambdaRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:BatchWriteItem
              - dynamodb:Query
              - dynamodb:GetItem
            Resource:
              - !Sub "${PaperDeliveryTableArn}"
              - !Sub "${PaperDeliveryTableArn}/*"
              - !Sub "${PaperDeliveryDriverUsedCapacitiesTableArn}"
              - !Sub "${PaperDeliveryDriverUsedCapacitiesTableArn}/*"
          - Effect: Allow
            Action:
              - dynamodb:UpdateItem
            Resource:
              - !Sub "${PaperDeliveryCounterTableArn}"
              - !Sub "${PaperDeliveryCounterTableArn}/*"
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:HeadObject
              - s3:ListBucket
              - s3:GetObjectTagging
            Resource:
              - !Sub "${TestDelayerBucketArn}"
              - !Sub "${TestDelayerBucketArn}/*"
          - Sid: DecryptObjects
            Effect: Allow
            Action:
              - kms:Decrypt
              - kms:DescribeKey
            Resource:
              - !Sub "${TestDelayerKmsBucketArn}"
          - Effect: Allow
            Action:
              - states:StartExecution
            Resource:
              - !Ref PaperDeliveryStateMachine
              - !Ref DelayerToPaperChannelStateMachine

  DelayerStartWorkflowScheduleRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub '${ProjectName}-delayerStartWorkflowScheduleRule'
      ScheduleExpression: !Sub cron(${DelayerStartWorkflowCron})
      State: !Ref DelayerStartWorkflowRuleState
      Targets:
        - Id: StepFunctionTarget
          Arn: !Ref PaperDeliveryStateMachine
          RoleArn: !GetAtt DelayerStartWorkflowScheduleRuleRole.Arn
          Input: !Sub |
            {
              "PAPERDELIVERY_TABLENAME": "${PaperDeliveryTableName}",
              "PAPERDELIVERYDRIVERCAPACITIES_TABLENAME": "${PaperDeliveryDriverCapacitiesTableName}",
              "PAPERDELIVERYDRIVERUSEDCAPACITIES_TABLENAME": "${PaperDeliveryDriverUsedCapacitiesTableName}",
              "PAPERDELIVERYCOUNTER_TABLENAME": "${PaperDeliveryCounterTableName}",
              "PAPERDELIVERYSENDERLIMIT_TABLENAME": "${PaperDeliverySenderLimitTableName}",
              "PAPERDELIVERYUSEDSENDERLIMIT_TABLENAME": "${PaperDeliveryUsedSenderLimitTableName}",
              "PN_DELAYER_DELIVERYDATEDAYOFWEEK": "${DeliveryDateDayOfWeek}",
              "PN_DELAYER_PRINTCAPACITY": "${PrintCapacity}"
            }

  DelayerStartWorkflowScheduleRuleRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-delayerStartWorkflowScheduleRuleRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: StepFunctionInvokePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - states:StartExecution
                Resource: !Ref PaperDeliveryStateMachine
  PaperDeliveryStateMachine:
    Type: AWS::StepFunctions::StateMachine
    DependsOn:
      - PaperDeliveryStateMachinePolicy
    Properties:
      StateMachineName: BatchWorkflowStateMachine
      RoleArn: !GetAtt PaperDeliveryStateMachineRole.Arn
      Definition:
        Comment: "Paper Delivery State Machine"
        StartAt: GetActiveTender
        States:
          GetActiveTender:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            Parameters:
              FunctionName: !Ref PaperChannelTenderApiLambdaArn
              Payload:
                operation: GET_TENDER_ACTIVE
            Retry:
              - ErrorEquals:
                  - Lambda.ServiceException
                  - Lambda.AWSLambdaException
                  - Lambda.SdkClientException
                  - Lambda.TooManyRequestsException
                IntervalSeconds: 1
                MaxAttempts: !Ref StepFunctionStateMaxAttempts
                BackoffRate: 2
                JitterStrategy: FULL
            Catch:
              - ErrorEquals:
                  - States.ALL
                Next: WorkflowFail
            Next: retrieveProvince
            ResultSelector:
              actualTenderId.$: $.Payload.body.tenderId
              paperDeliveryTableName.$: $$.Execution.Input.PAPERDELIVERY_TABLENAME
              paperDeliveryDriverCapacitiesTableName.$: $$.Execution.Input.PAPERDELIVERYDRIVERCAPACITIES_TABLENAME
              paperDeliveryDriverUsedCapacitiesTableName.$: $$.Execution.Input.PAPERDELIVERYDRIVERUSEDCAPACITIES_TABLENAME
              paperDeliveryCounterTableName.$: $$.Execution.Input.PAPERDELIVERYCOUNTER_TABLENAME
              paperDeliverySenderLimitTableName.$: $$.Execution.Input.PAPERDELIVERYSENDERLIMIT_TABLENAME
              paperDeliveryUsedSenderLimitTableName.$: $$.Execution.Input.PAPERDELIVERYUSEDSENDERLIMIT_TABLENAME
              deliveryDateDayOfWeek.$: $$.Execution.Input.PN_DELAYER_DELIVERYDATEDAYOFWEEK
              printCapacity.$: $$.Execution.Input.PN_DELAYER_PRINTCAPACITY
          retrieveProvince:
            Type: Task
            Resource: arn:aws:states:::aws-sdk:dynamodb:scan
            Parameters:
              TableName: pn-PaperChannelProvince
              ProjectionExpression: province
            ResultPath: $.provinces
            Next: MapSubmitSenderLimitJobs
            Retry:
              - ErrorEquals:
                  - States.ALL
                IntervalSeconds: 1
                MaxAttempts: !Ref StepFunctionStateMaxAttempts
                BackoffRate: 2
            Catch:
              - ErrorEquals:
                  - States.ALL
                Next: WorkflowFail
          MapSubmitSenderLimitJobs:
            Type: Map
            ItemsPath: $.provinces.Items
            InputPath: $
            MaxConcurrency: 40
            Parameters:
              province.$: $$.Map.Item.Value.province.S
              actualTenderId.$: $.actualTenderId
              paperDeliveryCounterTableName.$: $.paperDeliveryCounterTableName
              paperDeliverySenderLimitTableName.$: $.paperDeliverySenderLimitTableName
              paperDeliveryUsedSenderLimitTableName.$: $.paperDeliveryUsedSenderLimitTableName
              paperDeliveryDriverCapacitiesTableName.$: $.paperDeliveryDriverCapacitiesTableName
              paperDeliveryTableName.$: $.paperDeliveryTableName
              deliveryDateDayOfWeek.$: $.deliveryDateDayOfWeek
              printCapacity.$: $.printCapacity
              paperDeliveryDriverUsedCapacitiesTableName.$: $.paperDeliveryDriverUsedCapacitiesTableName
            Iterator:
              StartAt: submitSenderLimitJob
              States:
                submitSenderLimitJob:
                  Type: Task
                  Resource: arn:aws:states:::batch:submitJob.sync
                  Parameters:
                    JobName.$: States.Format('{}', $.province)
                    JobQueue: !Ref SenderLimitJobQueue
                    JobDefinition: !Ref SenderLimitJobDefinition
                    ContainerOverrides:
                      Environment:
                        - Name: PN_DELAYER_DAO_PAPERDELIVERYCOUNTERTABLENAME
                          Value.$: $.paperDeliveryCounterTableName
                        - Name: PN_DELAYER_DAO_PAPERDELIVERYSENDERLIMITTABLENAME
                          Value.$: $.paperDeliverySenderLimitTableName
                        - Name: PN_DELAYER_DAO_PAPERDELIVERYUSEDSENDERLIMITTABLENAME
                          Value.$: $.paperDeliveryUsedSenderLimitTableName
                        - Name: PN_DELAYER_DAO_PAPERDELIVERYDRIVERCAPACITIESTABLENAME
                          Value.$: $.paperDeliveryDriverCapacitiesTableName
                        - Name: PN_DELAYER_DAO_PAPERDELIVERYTABLENAME
                          Value.$: $.paperDeliveryTableName
                        - Name: PN_DELAYER_EVALUATESENDERLIMITJOBINPUT_PROVINCE
                          Value.$: $.province
                        - Name: PN_DELAYER_ACTUALTENDERID
                          Value.$: $.actualTenderId
                        - Name: PN_DELAYER_WORKFLOWSTEP
                          Value: EVALUATE_SENDER_LIMIT
                        - Name: PN_DELAYER_DELIVERYDATEDAYOFWEEK
                          Value.$: $.deliveryDateDayOfWeek
                        - Name: PN_DELAYER_PRINTCAPACITY
                          Value.$: $.printCapacity
                  Retry:
                    - ErrorEquals:
                        - States.ALL
                      IntervalSeconds: 1
                      MaxAttempts: !Ref StepFunctionStateMaxAttempts
                      BackoffRate: 2
                  Catch:
                    - ErrorEquals:
                        - States.ALL
                      Next: SenderLimitJobFail
                  OutputPath: $.Status
                  End: true
                SenderLimitJobFail:
                  Type: Fail
            ResultPath: $.ignoredMapResult
            Next: GetUnifiedDeliveryDriverProvinceParameter
            Catch:
              - ErrorEquals:
                  - States.ALL
                Next: WorkflowFail
          GetUnifiedDeliveryDriverProvinceParameter:
            Type: Task
            Resource: arn:aws:states:::aws-sdk:ssm:getParameter
            Parameters:
              Name: !Ref UnifiedDeliveryDriverProvinceParameter
              WithDecryption: true
            ResultSelector:
              unifiedDeliveryDrivers.$: States.StringToJson($.Parameter.Value)
            ResultPath: $.tempGetParameterResult
            Next: CleanUpInput
            Retry:
              - ErrorEquals:
                  - States.ALL
                IntervalSeconds: 1
                MaxAttempts: !Ref StepFunctionStateMaxAttempts
                BackoffRate: 2
            Catch:
              - ErrorEquals:
                  - States.ALL
                Next: WorkflowFail
          CleanUpInput:
            Type: Pass
            Parameters:
              paperDeliveryTableName.$: $.paperDeliveryTableName
              deliveryDateDayOfWeek.$: $.deliveryDateDayOfWeek
              paperDeliveryUsedSenderLimitTableName.$: $.paperDeliveryUsedSenderLimitTableName
              actualTenderId.$: $.actualTenderId
              paperDeliverySenderLimitTableName.$: $.paperDeliverySenderLimitTableName
              paperDeliveryCounterTableName.$: $.paperDeliveryCounterTableName
              paperDeliveryDriverCapacitiesTableName.$: $.paperDeliveryDriverCapacitiesTableName
              paperDeliveryDriverUsedCapacitiesTableName.$: $.paperDeliveryDriverUsedCapacitiesTableName
              unifiedDeliveryDrivers.$: $.tempGetParameterResult.unifiedDeliveryDrivers
              printCapacity.$: $.printCapacity
            Next: MapSubmitEvaluateDriverCapacityJobs
          MapSubmitEvaluateDriverCapacityJobs:
            Type: Map
            ItemsPath: $.unifiedDeliveryDrivers
            InputPath: $
            MaxConcurrency: 40
            Parameters:
              driver.$: $$.Map.Item.Value.driver
              provinces.$: $$.Map.Item.Value.provinces
              actualTenderId.$: $.actualTenderId
              paperDeliveryCounterTableName.$: $.paperDeliveryCounterTableName
              paperDeliverySenderLimitTableName.$: $.paperDeliverySenderLimitTableName
              paperDeliveryUsedSenderLimitTableName.$: $.paperDeliveryUsedSenderLimitTableName
              paperDeliveryDriverCapacitiesTableName.$: $.paperDeliveryDriverCapacitiesTableName
              paperDeliveryTableName.$: $.paperDeliveryTableName
              deliveryDateDayOfWeek.$: $.deliveryDateDayOfWeek
              printCapacity.$: $.printCapacity
              paperDeliveryDriverUsedCapacitiesTableName.$: $.paperDeliveryDriverUsedCapacitiesTableName
            Iterator:
              StartAt: submitEvaluateDriverCapacityJob
              States:
                submitEvaluateDriverCapacityJob:
                  Type: Task
                  Resource: arn:aws:states:::batch:submitJob.sync
                  Parameters:
                    JobName.$: $.driver
                    JobQueue: !Ref DriverCapacityJobQueue
                    JobDefinition: !Ref DriverCapacityJobDefinition
                    ArrayProperties:
                      Size.$: States.ArrayLength($.provinces)
                    ContainerOverrides:
                      Environment:
                        - Name: PN_DELAYER_DAO_PAPERDELIVERYDRIVERCAPACITIESTABLENAME
                          Value.$: $.paperDeliveryDriverCapacitiesTableName
                        - Name: PN_DELAYER_DAO_PAPERDELIVERYDRIVERUSEDCAPACITIESTABLENAME
                          Value.$: $.paperDeliveryDriverUsedCapacitiesTableName
                        - Name: PN_DELAYER_DAO_PAPERDELIVERYCOUNTERTABLENAME
                          Value.$: $.paperDeliveryCounterTableName
                        - Name: PN_DELAYER_DAO_PAPERDELIVERYTABLENAME
                          Value.$: $.paperDeliveryTableName
                        - Name: PN_DELAYER_DELIVERYDATEDAYOFWEEK
                          Value.$: $.deliveryDateDayOfWeek
                        - Name: PN_DELAYER_PRINTCAPACITY
                          Value.$: $.printCapacity
                        - Name: PN_DELAYER_EVALUATEDRIVERCAPACITYJOBINPUT_UNIFIEDDELIVERYDRIVER
                          Value.$: $.driver
                        - Name: PN_DELAYER_EVALUATEDRIVERCAPACITYJOBINPUT_PROVINCELIST
                          Value.$: States.JsonToString($.provinces)
                        - Name: PN_DELAYER_ACTUALTENDERID
                          Value.$: $.actualTenderId
                        - Name: PN_DELAYER_WORKFLOWSTEP
                          Value: EVALUATE_DRIVER_CAPACITY
                  Retry:
                    - ErrorEquals:
                        - States.ALL
                      IntervalSeconds: 1
                      MaxAttempts: !Ref StepFunctionStateMaxAttempts
                      BackoffRate: 2
                  Catch:
                    - ErrorEquals:
                        - States.ALL
                      Next: EvaluateDriverCapacityFail
                  End: true
                  OutputPath: $.Status
                EvaluateDriverCapacityFail:
                  Type: Fail
            ResultPath: $.ignoredMapResult
            Catch:
              - ErrorEquals:
                  - States.ALL
                Next: WorkflowFail
            Next: MapSubmitEvaluateResidualCapacityJobs
          MapSubmitEvaluateResidualCapacityJobs:
            Type: Map
            ItemsPath: $.unifiedDeliveryDrivers
            InputPath: $
            MaxConcurrency: 40
            Parameters:
              driver.$: $$.Map.Item.Value.driver
              provinces.$: $$.Map.Item.Value.provinces
              actualTenderId.$: $.actualTenderId
              paperDeliveryCounterTableName.$: $.paperDeliveryCounterTableName
              paperDeliverySenderLimitTableName.$: $.paperDeliverySenderLimitTableName
              paperDeliveryUsedSenderLimitTableName.$: $.paperDeliveryUsedSenderLimitTableName
              paperDeliveryDriverCapacitiesTableName.$: $.paperDeliveryDriverCapacitiesTableName
              paperDeliveryTableName.$: $.paperDeliveryTableName
              deliveryDateDayOfWeek.$: $.deliveryDateDayOfWeek
              printCapacity.$: $.printCapacity
              paperDeliveryDriverUsedCapacitiesTableName.$: $.paperDeliveryDriverUsedCapacitiesTableName
            Iterator:
              StartAt: submitEvaluateResidualCapacityJob
              States:
                submitEvaluateResidualCapacityJob:
                  Type: Task
                  Resource: arn:aws:states:::batch:submitJob.sync
                  Parameters:
                    JobName.$: $.driver
                    JobQueue: !Ref ResidualCapacityJobQueue
                    JobDefinition: !Ref ResidualCapacityJobDefinition
                    ArrayProperties:
                      Size.$: States.ArrayLength($.provinces)
                    ContainerOverrides:
                      Environment:
                        - Name: PN_DELAYER_DAO_PAPERDELIVERYDRIVERCAPACITIESTABLENAME
                          Value.$: $.paperDeliveryDriverCapacitiesTableName
                        - Name: PN_DELAYER_DAO_PAPERDELIVERYDRIVERUSEDCAPACITIESTABLENAME
                          Value.$: $.paperDeliveryDriverUsedCapacitiesTableName
                        - Name: PN_DELAYER_DAO_PAPERDELIVERYTABLENAME
                          Value.$: $.paperDeliveryTableName
                        - Name: PN_DELAYER_DELIVERYDATEDAYOFWEEK
                          Value.$: $.deliveryDateDayOfWeek
                        - Name: PN_DELAYER_EVALUATERESIDUALCAPACITYJOBINPUT_UNIFIEDDELIVERYDRIVER
                          Value.$: $.driver
                        - Name: PN_DELAYER_EVALUATERESIDUALCAPACITYJOBINPUT_PROVINCELIST
                          Value.$: States.JsonToString($.provinces)
                        - Name: PN_DELAYER_ACTUALTENDERID
                          Value.$: $.actualTenderId
                        - Name: PN_DELAYER_WORKFLOWSTEP
                          Value: EVALUATE_RESIDUAL_CAPACITY
                        - Name: PN_DELAYER_DAO_PAPERDELIVERYCOUNTERTABLENAME
                          Value.$: $.paperDeliveryCounterTableName
                        - Name: PN_DELAYER_PRINTCAPACITY
                          Value.$: $.printCapacity
                  Retry:
                    - ErrorEquals:
                        - States.ALL
                      IntervalSeconds: 1
                      MaxAttempts: !Ref StepFunctionStateMaxAttempts
                      BackoffRate: 2
                  Catch:
                    - ErrorEquals:
                        - States.ALL
                      Next: EvaluateResidualCapacityFail
                  End: true
                  OutputPath: $.Status
                EvaluateResidualCapacityFail:
                  Type: Fail
            ResultPath: $.ignoredMapResult
            Catch:
              - ErrorEquals:
                  - States.ALL
                Next: WorkflowFail
            Next: WorkflowSuccess
          WorkflowFail:
            Type: Fail
          WorkflowSuccess:
            Type: Succeed

  PaperDeliveryStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-paperDeliveryStateMachineRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action:
              - sts:AssumeRole

    # Lambda function IAM policy
  PaperDeliveryStateMachinePolicy:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: !Sub ${ProjectName}-paperDeliveryStateMachinePolicy
        Roles:
          - !Ref PaperDeliveryStateMachineRole
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${UnifiedDeliveryDriverProvinceParameter}
            - Effect: Allow
              Action:
                - dynamodb:Scan
              Resource:
                - !Sub "${ProvinceTableArn}"
                - !Sub "${ProvinceTableArn}/*"
            - Effect: Allow
              Action:
                - batch:SubmitJob
                - batch:DescribeJobs
              Resource:
                  - !Ref SenderLimitJobDefinition
                  - !Ref ResidualCapacityJobDefinition
                  - !Ref DriverCapacityJobDefinition
                  - !Ref SenderLimitJobQueue
                  - !Ref ResidualCapacityJobQueue
                  - !Ref DriverCapacityJobQueue
            - Effect: Allow
              Action:
                - lambda:InvokeFunction
              Resource:
                - !Ref PaperChannelTenderApiLambdaArn
            - Effect: Allow
              Action:
                - events:PutRule
                - events:PutTargets
                - events:DescribeRule
                - events:DeleteRule
                - events:RemoveTargets
                - events:TagResource
                - events:ListTagsForResource
                - events:PutPermission
              Resource: "*"
  DelayerToPaperChannelDailyScheduleRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub '${ProjectName}-delayerToPaperChannelDailyScheduleRule'
      ScheduleExpression: !Sub cron(${DelayerToPaperChannelDailyScheduleCron})
      State: !Ref DelayerToPaperChannelDailyScheduleRuleState
      Targets:
        - Id: DelayerToPaperChannelStepFunctionTarget
          Arn: !Ref DelayerToPaperChannelStateMachine
          RoleArn: !GetAtt DelayerToPaperChannelDailyScheduleRuleRole.Arn
          Input: !Sub |
            {
              "PAPERDELIVERYCOUNTER_TABLENAME": "${PaperDeliveryCounterTableName}",
              "PAPERDELIVERY_TABLENAME": "${PaperDeliveryTableName}",
              "PN_DELAYER_DELIVERYDATEDAYOFWEEK": "${DeliveryDateDayOfWeek}"
            }

  DelayerToPaperChannelDailyScheduleRuleRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-delayerToPaperChannelDailyScheduleRuleRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DelayerToPaperChannelStepFunctionInvokePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - states:StartExecution
                Resource: !Ref DelayerToPaperChannelStateMachine

  DelayerToPaperChannelStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: DelayerToPaperChannelStateMachine
      RoleArn: !GetAtt DelayerToPaperChannelStateMachineRole.Arn
      Definition:
        Comment: Delayer to paper channel State Machine
        StartAt: RetrieveCounter
        States:
          RetrieveCounter:
            Type: Task
            Resource: arn:aws:states:::aws-sdk:dynamodb:query
            Parameters:
              ExpressionAttributeValues:
                ":pk":
                  S: PRINT
              KeyConditionExpression: pk = :pk
              Limit: 1
              ScanIndexForward: false
              TableName.$: $$.Execution.Input.PAPERDELIVERYCOUNTER_TABLENAME
            ResultPath: $.queryResult
            Retry:
              - ErrorEquals:
                  - States.ALL
                IntervalSeconds: 1
                BackoffRate: 2
                MaxAttempts: !Ref StepFunctionStateMaxAttempts
            Catch:
              - ErrorEquals:
                  - States.ALL
                Next: DynamoDbOperationFail
            Next: CheckIfCounterExists
          CheckIfCounterExists:
            Type: Choice
            Choices:
              - Variable: '$.queryResult.Count'
                NumericGreaterThan: 0
                Next: MapItem
            Default: NoItemToProcess
          NoItemToProcess:
            Type: Succeed
          MapItem:
            Type: Pass
            Parameters:
              dailyPrintCapacity.$: $.queryResult.Items[0].dailyPrintCapacity.N
              executionDate.$: $$.Execution.StartTime
              lastEvaluatedKeyNextWeek.$: $.queryResult.Items[0].lastEvaluatedKeyNextWeek.M
              lastEvaluatedKeyPhase2.$: $.queryResult.Items[0].lastEvaluatedKeyPhase2.M
              numberOfShipments.$: $.queryResult.Items[0].numberOfShipments.N
              pk.$: $.queryResult.Items[0].pk.S
              sendToNextStepCounter: 0
              sendToNextWeekCounter: 0
              sentToNextWeek.$: $.queryResult.Items[0].sentToNextWeek.N
              sk.$: $.queryResult.Items[0].sk.S
              weeklyPrintCapacity.$: $.queryResult.Items[0].weeklyPrintCapacity.N
            ResultPath: $.entity
            Next: Parallel
          DynamoDbOperationFail:
            Type: Fail
          Parallel:
            Type: Parallel
            ResultPath: $.parallelResult
            Next: UpdatePaperDeliveryCounter
            Branches:
              # ──────────────────────────────── BRANCH 1 ────────────────────────────────
              - StartAt: SendPrintCapacityExceedToNextWeek
                States:
                  SendPrintCapacityExceedToNextWeek:
                    Type: Task
                    Resource: arn:aws:states:::lambda:invoke
                    Parameters:
                      FunctionName: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${DelayerToPaperChannelLambdaName}"
                      Payload:
                        input.$: $.entity
                        processType: SEND_TO_NEXT_WEEK
                    OutputPath: $.Payload
                    Retry:
                      - ErrorEquals:
                          - Lambda.ServiceException
                          - Lambda.AWSLambdaException
                          - Lambda.SdkClientException
                          - Lambda.TooManyRequestsException
                        IntervalSeconds: 1
                        BackoffRate: 2
                        MaxAttempts: !Ref StepFunctionStateMaxAttempts
                        JitterStrategy: FULL
                    Catch:
                      - ErrorEquals:
                          - States.ALL
                        Next: SendPrintCapacityExceedToNextWeekFail
                    Next: MoreItemsToSendToNextWeek
                  SendPrintCapacityExceedToNextWeekFail:
                    Type: Fail
                  MoreItemsToSendToNextWeek:
                    Type: Choice
                    Choices:
                      - And:
                          - Variable: $.lastEvaluatedKeyNextWeek
                            IsPresent: true
                          - Variable: $.sendToNextWeekCounter
                            NumericLessThan: 250000
                          - Variable: $.sentToNextWeek
                            StringLessThanPath: $.toSendToNextWeek
                        Next: SendPrintCapacityExceedToNextWeek
                    Default: IsLastEvaluatedKeyNextWeekNull
                  IsLastEvaluatedKeyNextWeekNull:
                    Type: Choice
                    Choices:
                      - Variable: $.input.lastEvaluatedKeyNextWeek
                        IsNull: true
                        Next: PatchNextWeekNull
                    Default: ToNextWeekSuccessfully
                  PatchNextWeekNull:
                    Type: Pass
                    Parameters:
                      input:
                        dailyPrintCapacity.$: $.input.dailyPrintCapacity
                        weeklyPrintCapacity.$: $.input.weeklyPrintCapacity
                        numberOfShipments.$: $.input.numberOfShipments
                        lastEvaluatedKeyNextWeek: { }
                        sendToNextWeekCounter.$: $.input.sendToNextWeekCounter
                        sentToNextWeek.$: $.input.sentToNextWeek
                        executionDate.$: $.input.executionDate
                      processType.$: $.processType
                      paperDeliveryTableName.$: $$.Execution.Input.PAPERDELIVERY_TABLENAME
                    ResultPath: $
                    Next: ToNextWeekSuccessfully
                  ToNextWeekSuccessfully:
                    Type: Succeed

              # ──────────────────────────────── BRANCH 2 ────────────────────────────────
              - StartAt: SendPaperDeliveryToPreparePhase2
                States:
                  SendPaperDeliveryToPreparePhase2:
                    Type: Task
                    Resource: arn:aws:states:::lambda:invoke
                    Parameters:
                      FunctionName: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${DelayerToPaperChannelLambdaName}"
                      Payload:
                        input.$: $.entity
                        processType: SEND_TO_PHASE_2
                    OutputPath: $.Payload
                    Retry:
                      - ErrorEquals:
                          - Lambda.ServiceException
                          - Lambda.AWSLambdaException
                          - Lambda.SdkClientException
                          - Lambda.TooManyRequestsException
                        IntervalSeconds: 1
                        BackoffRate: 2
                        MaxAttempts: !Ref StepFunctionStateMaxAttempts
                        JitterStrategy: FULL
                    Catch:
                      - ErrorEquals:
                          - States.ALL
                        Next: SendPaperDeliveryToPreparePhase2Fail
                    Next: MoreItemsToSendToPreparePhase2
                  SendPaperDeliveryToPreparePhase2Fail:
                    Type: Fail
                  MoreItemsToSendToPreparePhase2:
                    Type: Choice
                    Choices:
                      - And:
                          - Variable: $.lastEvaluatedKeyPhase2
                            IsPresent: true
                          - Variable: $.sendToNextStepCounter
                            NumericLessThanPath: $.dailyPrintCapacity
                        Next: SendPaperDeliveryToPreparePhase2
                    Default: IsLastEvaluatedPhase2Null
                  IsLastEvaluatedPhase2Null:
                    Type: Choice
                    Choices:
                      - Variable: $.input.lastEvaluatedKeyPhase2
                        IsNull: true
                        Next: PatchPhase2Null
                    Default: ToPreparePhase2Successfully
                  PatchPhase2Null:
                    Type: Pass
                    Parameters:
                      input:
                        dailyPrintCapacity.$: $.input.dailyPrintCapacity
                        weeklyPrintCapacity.$: $.input.weeklyPrintCapacity
                        numberOfShipments.$: $.input.numberOfShipments
                        lastEvaluatedKeyPhase2: { }
                        sendToNextStepCounter.$: $.input.sendToNextStepCounter
                        executionDate.$: $.input.executionDate
                      processType.$: $.processType
                      paperDeliveryTableName.$: $$.Execution.Input.PAPERDELIVERY_TABLENAME
                    ResultPath: $
                    Next: ToPreparePhase2Successfully
                  ToPreparePhase2Successfully:
                    Type: Succeed

          UpdatePaperDeliveryCounter:
            Type: Task
            Resource: arn:aws:states:::aws-sdk:dynamodb:updateItem
            Parameters:
              Key:
                pk:
                  S.$: $.entity.pk
                sk:
                  S.$: $.entity.sk
              TableName.$: $.PAPERDELIVERYCOUNTER_TABLENAME
              ExpressionAttributeValues:
                ":nextWeekVal":
                  M.$: $.parallelResult[0].input.lastEvaluatedKeyNextWeek
                ":phase2Val":
                  M.$: $.parallelResult[1].input.lastEvaluatedKeyPhase2
                ":sentToNextWeekInc":
                  N.$: States.Format('{}', $.parallelResult[0].input.sendToNextWeekCounter)
              UpdateExpression: 'SET lastEvaluatedKeyPhase2 = :phase2Val, lastEvaluatedKeyNextWeek = :nextWeekVal  ADD sentToNextWeek :sentToNextWeekInc'
            Retry:
              - ErrorEquals:
                  - States.ALL
                IntervalSeconds: 1
                BackoffRate: 2
                MaxAttempts: !Ref StepFunctionStateMaxAttempts
            Catch:
              - ErrorEquals:
                  - States.ALL
                Next: DynamoDbOperationFail
            End: true


  DelayerToPaperChannelStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-delayerToPaperChannelStateMachineRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action:
              - sts:AssumeRole

  DelayerToPaperChannelStateMachinePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${ProjectName}-delayerToPaperChannelStateMachinePolicy
      Roles:
        - !Ref DelayerToPaperChannelStateMachineRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:Query
              - dynamodb:UpdateItem
            Resource:
              - !Sub "${PaperDeliveryCounterTableArn}"
              - !Sub "${PaperDeliveryCounterTableArn}/*"
          - Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource:
              - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${DelayerToPaperChannelLambdaName}"

  DelayerToPaperChannelPipe:
    Type: AWS::Pipes::Pipe
    Properties:
      Name: !Sub '${ProjectName}-delayerToPaperChannelPipe'
      RoleArn: !GetAtt DelayerToPaperChannelPipeExecutionRole.Arn
      Source: !Ref PaperDeliveryTableStreamArn
      SourceParameters:
        DynamoDBStreamParameters:
          StartingPosition: LATEST
        FilterCriteria:
          Filters:
            - Pattern: >
                {
                  "eventName": ["INSERT"],
                  "dynamodb": {
                    "NewImage": {
                      "pk": {
                        "S": [{ "suffix": "SENT_TO_PREPARE_PHASE_2" }]
                      }
                    }
                  }
                }
      Target: !Ref DelayerToPaperChannelQueueARN
      TargetParameters:
        InputTemplate: >
          {
            "requestId": <$.dynamodb.NewImage.requestId.S>,
            "iun": <$.dynamodb.NewImage.iun.S>
          }

  DelayerToPaperChannelPipeExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-DelayerToPaperChannelPipeExecutionRole'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: pipes.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: PipeDynamoDBToSqsPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:DescribeStream
                  - dynamodb:GetRecords
                  - dynamodb:GetShardIterator
                  - dynamodb:ListStreams
                Resource:
                  - !Sub "${PaperDeliveryTableArn}"
                  - !Sub "${PaperDeliveryTableArn}/*"
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                Resource: !Ref DelayerToPaperChannelQueueARN

  DelayerOrdersSendersQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref SafeStorageToDelayerReceiverOrdersSendersLambdaQueueURL
      PolicyDocument:
        Statement:
          - Sid: "SendEventsToDLQ"
            Effect: "Allow"
            Principal:
              Service:
                - "events.amazonaws.com"
            Action:
              - "SQS:SendMessage"
            Resource:
              - !Ref SafeStorageToDelayerReceiverOrdersSendersLambdaQueueARN

  LambdaVpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VpcId
      VpcEndpointType: Interface
      ServiceName: !Sub com.amazonaws.${AWS::Region}.lambda
      SubnetIds: !Split [ ",", !Ref SubnetsIds ]   # le stesse subnet usate da Batch
      SecurityGroupIds:
        - !Ref LambdaVpceSecurityGroup
      PrivateDnsEnabled: true


  LambdaVpceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: VPCE for Lambda
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: !Ref SenderLimitSecurityGroup
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: !Ref DriverCapacitySecurityGroup
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: !Ref ResidualCapacitySecurityGroup
