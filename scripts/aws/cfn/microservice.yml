AWSTemplateFormatVersion: 2010-09-09
Description: 'Microservice deploy for pn-delayer'

Parameters:
  ProjectName:
    Type: String
    Description: 'Usually pn can be pnXYZ where XYZ are the feature number, useful to create
      experimental environments without crash official development environment'

  AlarmSNSTopicArn:
    Type: String
    Description: ARN of alarm topic

  WebApiDnsName:
    Type: String
    Description: 'The DNS name used for WEB rest API.'
  
  CorsAllowedDomains:
    Type: String
    Description: 'Comma separated list of domains allowed to make cross origin request'

  ContainerImageUri:
    Type: String
    Description: 'Exact container image URI with full repository and image digest'

  MicroserviceNumber:
    Type: Number
    Description: 'Disambiguation useful for load balancer rules'

  TemplateBucketBaseUrl:
    Type: String
    Description: 'The S3 bucket from which to fetch the templates used by this stack.'

  ECSClusterName:
    Type: String
    Description: 'The name of the ECS cluster where the microservice is going to be deployed'

  SubnetsIds:
    Type: String
    Description: 'subnets ids comma separated list. Where to deploy the microservice'

  VpcId:
    Type: String
    Description: 'VpcId where the microservice is going to be deployed'
  
  EcsDefaultSecurityGroup:
    Type: String
    Description: 'Default security group required by infrastructure'

  ApplicationLoadBalancerListenerArn:
    Type: String
    Description: 'Load balancer listener where HTTP endpoints is going to be registered'

  ApplicationLoadBalancerDomain:
    Type: String
    Description: 'Base URL of the load balancer where the service is going to be reachable'

  NetworkLoadBalancerLink:
    Type: String
    Description: 'network load balancer link for API-GW'
  
  LogsKinesisSourceStreamArn:
    Type: String
    Description: 'Kinesis stream that receive logs'
  
  Version:
    Type: String
    Description: 'keep track of used projects commitIds'

  PaperDeliveryDriverCapacitiesTableName:
    Type: String
    Description: 'DynamoDB table name for PaperDeliveryDriverCapacities'

  PaperDeliveryDriverCapacitiesTableArn:
    Type: String
    Description: 'ARN of dynamodb table containing PaperDeliveryDriverCapacities'

  PaperDeliveryDriverUsedCapacitiesTableName:
    Type: String
    Description: 'DynamoDB table name for  PaperDeliveryDriverUsedCapacities'

  PaperDeliveryDriverUsedCapacitiesTableArn:
    Type: String
    Description: 'ARN of dynamodb table containing  PaperDeliveryDriverUsedCapacities'

  PaperDeliveryHighPriorityTableName:
    Type: String
    Description: 'DynamoDB table name for PaperDeliveryHighPriority'

  PaperDeliveryHighPriorityTableArn:
    Type: String
    Description: 'ARN of dynamodb table containing PaperDeliveryHighPriority'

  PaperDeliveryReadyToSendTableName:
    Type: String
    Description: 'DynamoDB table name for PaperDeliveryReadyToSend'

  PaperDeliveryReadyToSendTableArn:
    Type: String
    Description: 'ARN of dynamodb table containing PaperDeliveryReadyToSend'

  HighPriorityQueryLimit:
    Type: Number
    Description: 'Max elements quantity for high priority query'

  DeliveryDateDayOfWeek:
    Type: Number
    Description: 'Day of the week for capacity (0=Sunday, 1=Monday, 2=Tuesday, 3=Wednesday, 4=Thursday, 5=Friday, 6=Saturday)'
    Default: 1

  DeliveryDateInterval:
    Type: String
    Description: 'Interval for deliveryDate setting'
    Default: 1d

  PaperDeliveryCutOffDuration:
    Type: String
    Description: 'Cut off duration for paper delivery. available value = 7d (weekly cut-off), 0d (no cut-off))'
    Default: 7d

  VpcCidr:
    Type: String
    Description: 'VPC Cidr default'

  BatchLogGroup:
    Type: String
    Description: 'Batch log group name'

  MaxvCpus:   ##TODEFINE in order to set the max number of parallel jobs
    Type: String
    Default: 8
    Description: The maximum number of Amazon EC2 vCPUs that an environment can reach.

  VCPU:     ##TODEFINE in order to set the max number of parallel jobs
    Type: String
    Default: 0.25
    Description: The number of vCPUs reserved for the container.

  ComputeResourceType:
    Type: String
    Default: FARGATE
    AllowedValues:
      - FARGATE_SPOT
      - FARGATE
    Description: Enter FARGATE_SPOT or FARGATE.

  Memory:
    Type: String
    Default: 2048
    Description: The memory hard limit (in MiB) present to the container.

  PnDelayerInputsKinesisDataStreamArn:
    Type: String
    Description: 'pn-delayer_inputs kinesis stream ARN'

  PnDelayerInputsKinesisDataStreamKMSArn:
    Type: String
    Description: 'pn-delayer_inputs kinesis stream KMS ARN'

  UnifiedDeliveryDriverProvince:
    Type: String
    Default: ' '
    Description: 'Input tuple unifiedDeliveryDriverProvince for the job'

  # OpenApi Bucket params
  MicroserviceBucketName:
    Type: String
    Default: ''
    Description: 'Name of the bucket where the microservice files are copied during deploy'

  MicroserviceBucketBaseKey:
    Type: String
    Default: ''
    Description: 'Base key of the microservice in the s3 bucket'

  LambdaRuntime:
    Type: String
    Default: nodejs20.x
    Description: Runtime for Lambdas.

  KinesisPaperDeliveryLambdaDLQARN:
    Type: String
    Description: 'DLQ ARN for KinesisPaperDeliveryLambda'

  KinesisPaperDeliveryLambdaMaxRetry:
    Type: Number
    Default: 1
    Description: 'Maximum retry attempts for KinesisPaperDeliveryLambda'

  KinesisPaperDeliveryLambdaBatchSize:
    Type: Number
    Default: 25
    Description: 'Batch size for KinesisPaperDeliveryLambda'

  KinesisPaperDeliveryLambdaName:
    Type: String
    Description: 'PaperDeliveryLambda function name'

  KinesisPaperDeliveryLambdaMaxBatchWindowInSeconds:
    Type: Number
    Default: 20
    Description: 'Maximum batching window in seconds for KinesisPaperDeliveryLambda'


Resources:

  ## Compute Environment
  ComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      Type: MANAGED
      ServiceRole: !Ref BatchServiceRole
      ComputeEnvironmentName: !Sub '${ProjectName}-delayer-compute-environment'
      ComputeResources:
        MaxvCpus: !Ref MaxvCpus
        Type: !Ref ComputeResourceType
        SecurityGroupIds:
          - !Ref BatchSecurityGroup
        Subnets: !Split [",", !Ref SubnetsIds]
      State: ENABLED

  BatchProcessingJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      PropagateTags: true
      JobDefinitionName: !Sub '${ProjectName}-delayer-job-definition'
      ContainerProperties:
        Image: !Ref ContainerImageUri
        FargatePlatformConfiguration:
          PlatformVersion: LATEST
        ResourceRequirements:
          - Value: !Ref VCPU
            Type: VCPU
          - Value: !Ref Memory
            Type: MEMORY
        JobRoleArn: !GetAtt "BatchTaskExecutionRole.Arn"
        ExecutionRoleArn: !GetAtt "BatchTaskExecutionRole.Arn"
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-group: !Ref "BatchLogGroup"
            awslogs-region: !Ref AWS::Region
            awslogs-stream-prefix: !Sub '${ProjectName}-delayer-logs'
        Environment:
          - Name: PN_DELAYER_DAO_PAPERDELIVERYDRIVERCAPACITIESTABLENAME
            Value: !Ref PaperDeliveryDriverCapacitiesTableName
          - Name: PN_DELAYER_DAO_PAPERDELIVERYDRIVERUSEDCAPACITIESTABLENAME
            Value: !Ref PaperDeliveryDriverUsedCapacitiesTableName
          - Name: PN_DELAYER_DAO_PAPERDELIVERYHIGHPRIORITYTABLENAME
            Value: !Ref PaperDeliveryHighPriorityTableName
          - Name: PN_DELAYER_DAO_PAPERDELIVERYREADYTOSENDTABLENAME
            Value: !Ref PaperDeliveryReadyToSendTableName
          - Name: PN_DELAYER_HIGHPRIORITYQUERYLIMIT
            Value: !Ref HighPriorityQueryLimit
          - Name: PN_DELAYER_DELIVERYDATEDAYOFWEEK
            Value: !Ref DeliveryDateDayOfWeek
          - Name: PN_DELAYER_DELIVERYDATEINTERVAL
            Value: !Ref DeliveryDateInterval
          - Name: AWS_REGIONCODE
            Value: !Ref AWS::Region
          - Name: PN_DELAYER_UNIFIEDDELIVERYDRIVERPROVINCE
            Value: !Ref UnifiedDeliveryDriverProvince
          - Name: PN_DELAYER_PAPERDELIVERYCUTOFFDURATION
            Value: !Ref PaperDeliveryCutOffDuration

      PlatformCapabilities:
        - FARGATE
      Tags:
        Service: Batch
        Name: JobDefinitionTag
        Expected: MergeTag

  ## JobQueue
  JobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref ComputeEnvironment
      State: ENABLED
      Priority: 1
      JobQueueName: !Sub '${ProjectName}-delayer-job-queue'

  BatchServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: batch.amazonaws.com
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole

  BatchTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-delayer-taskexec-role'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: "sts:AssumeRole"
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
      Path: /
      Policies:
        - PolicyName: AmazonECSTaskExecutionRolePolicy
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                - "ecr:GetAuthorizationToken"
                - "ecr:BatchCheckLayerAvailability"
                - "ecr:GetDownloadUrlForLayer"
                - "ecr:BatchGetImage"
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
              Resource: "*"
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:UpdateItem
                - dynamodb:Query
                - dynamodb:BatchGetItem
              Resource:
                - !Sub "${PaperDeliveryDriverUsedCapacitiesTableArn}"
                - !Sub "${PaperDeliveryDriverUsedCapacitiesTableArn}/*"
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:Query
              Resource:
                - !Sub "${PaperDeliveryDriverCapacitiesTableArn}"
                - !Sub "${PaperDeliveryDriverCapacitiesTableArn}/*"
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:DeleteItem
                - dynamodb:Query
                - dynamodb:TransactWriteItems
              Resource:
                - !Sub "${PaperDeliveryHighPriorityTableArn}"
                - !Sub "${PaperDeliveryHighPriorityTableArn}/*"
                - !Sub "${PaperDeliveryReadyToSendTableArn}"
                - !Sub "${PaperDeliveryReadyToSendTableArn}/*"

  BatchSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Batch Security Group
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: !Ref VpcCidr
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: "0.0.0.0/0"

  DelayerMicroserviceCloudWatchDashboard:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/microservice-cloudwatch-dashboard.yaml"
      Parameters:
        DashboardName: !Sub "${ProjectName}-delayer"
        DynamoDBTableNames: !Join
          - ','
          - - !Ref PaperDeliveryDriverCapacitiesTableName
            - !Ref PaperDeliveryDriverUsedCapacitiesTableName
            - !Ref PaperDeliveryHighPriorityTableName
            - !Ref PaperDeliveryReadyToSendTableName
        LogGroupsNames: !Join
          - ','
          - - !Sub '/aws/ecs/${ProjectName}-delayer'

  PnDelayerAlarmTopicPublisherRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-delayer-alarm-topic-publisher-role'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: "sts:AssumeRole"
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
      Path: /
      Policies:
        - PolicyName: !Sub '${ProjectName}-delayer-alarm-topic-publisher-policy'
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "sns:Publish"
                Resource: !Ref AlarmSNSTopicArn

    ### Enable sending notifications to SNS topic when the job is in failed status.
  BatchBridgeStateRule:
   Type: AWS::Events::Rule
   Properties:
     Description: The EventBridge rule to match Batch state change
     RoleArn: !GetAtt PnDelayerAlarmTopicPublisherRole.Arn
     EventPattern:
       source:
         - aws.batch
       detail-type:
         - Batch Job State Change
       detail:
         status:
           - FAILED
         jobDefinition:
          - !Ref BatchProcessingJobDefinition
     State: ENABLED
     Targets:
       - Arn: !Ref AlarmSNSTopicArn
         Id: !Sub "${ProjectName}-delayer"

  # Create alarm
  FailedInvocationMetricAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${ProjectName}-delayer-FailedInvocation-Alarm"
      AlarmDescription: "CloudWatch alarm for when pn-delayer job fails."
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref AlarmSNSTopicArn
      OKActions:
        - !Ref AlarmSNSTopicArn
      Dimensions:
        - Name: RuleName
          Value: !Ref BatchBridgeStateRule
      DatapointsToAlarm: 1
      MetricName: "Invocations"
      Namespace: "AWS/Events"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 12 # 1 hour
      Period: 300 # 5 minutes
      Statistic: Sum
      Threshold: 1

  ErrorFatalLogsMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref BatchLogGroup
      FilterPattern: '?ERROR ?FATAL ?CRITICAL'
      MetricTransformations:
        - MetricValue: 1
          MetricNamespace: "ErrorFatalLogs"
          MetricName: !Sub "${ProjectName}-delayer-ErrorFatalMetric"

  ErrorFatalLogsMetricAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn: ErrorFatalLogsMetricFilter
    Properties:
      AlarmName: !Sub "${ProjectName}-delayer-ErrorFatalLogs-Alarm"
      AlarmDescription: "CloudWatch alarm for when LogSaver LogGroup has ERROR or FATAL line."
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref AlarmSNSTopicArn
      OKActions:
        - !Ref AlarmSNSTopicArn
      DatapointsToAlarm: 1
      MetricName: !Sub "${ProjectName}-delayer-ErrorFatalMetric"
      Namespace: "ErrorFatalLogs"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 60
      Period: 60
      Statistic: Sum
      Threshold: 1

  PnCoreEventBusToDelayerInputsKinesis:
    Type: AWS::Events::Rule
    Properties:
      Description: Route Events from pn-core-event-bus to kinesis
      RoleArn: !GetAtt "DelayerInputsRole.Arn"
      EventBusName: !Sub '${ProjectName}-CoreEventBus'
      EventPattern:
        detail-type: [ "PreparePhaseOneOutcomeEvent" ]
      Targets:
        - Arn: !Ref PnDelayerInputsKinesisDataStreamArn
          Id: !Sub ${ProjectName}-DelayerInputsKinesisDataStream
          DeadLetterConfig:
            Arn: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:pn-CoreEventBus-DLQ

  DelayerInputsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
        Version: "2012-10-17"
      Policies:
        - PolicyName: !Sub ${ProjectName}-DelayerInputs-eventBusRolePolicy
          PolicyDocument:
            Statement:
              - Sid: KMSAllowList
                Action:
                  - kms:Decrypt
                  - kms:Encrypt
                  - kms:GenerateDataKey
                Effect: Allow
                Resource:
                  - !Ref PnDelayerInputsKinesisDataStreamKMSArn
              - Sid: putEventsToKinesis
                Effect: Allow
                Action:
                  - kinesis:PutRecords
                  - kinesis:PutRecord
                Resource:
                  - !Ref PnDelayerInputsKinesisDataStreamArn

  #########################################################
  ###         KinesisPaperDeliveryLambda                ###
  #########################################################

  KinesisPaperDeliveryLambdaSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub '${KinesisPaperDeliveryLambdaName}-sec-group'
      VpcId: !Ref VpcId

  # Lambda function
  KinesisPaperDeliveryLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref KinesisPaperDeliveryLambdaName
      Runtime: !Ref LambdaRuntime
      Handler: "index.handler"
      Code:
        S3Bucket: !Ref MicroserviceBucketName
        S3Key: !Sub "${MicroserviceBucketBaseKey}/functions_zip/kinesisPaperDeliveryLambda.zip"
      Role: !GetAtt KinesisPaperDeliveryLambdaRole.Arn
      Environment:
        Variables:
          REGION: !Sub ${AWS::Region}
          HIGH_PRIORITY_TABLE_NAME: !Ref PaperDeliveryHighPriorityTableName
          BATCH_SIZE: !Ref KinesisPaperDeliveryLambdaBatchSize
      TracingConfig:
        Mode: Active
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:339249233099:layer:LambdaInsightsExtension:13"
      Timeout: 15

  # Lambda function role
  KinesisPaperDeliveryLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-kinesisPaperDeliveryLambdaRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  # Lambda function IAM policy
  KinesisPaperDeliveryLambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${ProjectName}-kinesisPaperDeliveryLambdaPolicy
      Roles:
        - !Ref KinesisPaperDeliveryLambdaRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kinesis:DescribeStream
              - kinesis:DescribeStreamSummary
              - kinesis:GetShardIterator
              - kinesis:GetRecords
              - kinesis:ListShards
              - kinesis:ListStreams
              - kinesis:SubscribeToShard
            Resource: !Ref PnDelayerInputsKinesisDataStreamArn
          - Effect: Allow
            Action: kms:Decrypt
            Resource: !Ref PnDelayerInputsKinesisDataStreamKMSArn
          - Effect: Allow
            Action: dynamodb:BatchWriteItem
            Resource: !Ref PaperDeliveryHighPriorityTableArn
          - Effect: Allow
            Action:
              - sqs:ChangeMessageVisibility
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:SendMessage
            Resource:
              !Ref KinesisPaperDeliveryLambdaDLQARN

  PaperDeliveryLambdaKinesisSource:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: !Sub ${KinesisPaperDeliveryLambdaBatchSize}
      BisectBatchOnFunctionError: true
      EventSourceArn: !Ref PnDelayerInputsKinesisDataStreamArn
      FunctionName: !Ref KinesisPaperDeliveryLambda
      FunctionResponseTypes:
        - ReportBatchItemFailures
      MaximumBatchingWindowInSeconds: !Sub ${KinesisPaperDeliveryLambdaMaxBatchWindowInSeconds}
      MaximumRetryAttempts: !Ref KinesisPaperDeliveryLambdaMaxRetry
      StartingPosition: TRIM_HORIZON
      DestinationConfig:
        OnFailure:
          Destination: !Ref KinesisPaperDeliveryLambdaDLQARN

  KinesisPaperDeliveryLambdaAlarms:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/lambda-alarms.yaml"
      Parameters:
        FunctionName: !Ref KinesisPaperDeliveryLambda
        AlarmSNSTopicArn: !Ref AlarmSNSTopicArn