AWSTemplateFormatVersion: 2010-09-09
Description: 'Microservice deploy for pn-delayer'

Parameters:
  ProjectName:
    Type: String
    Description: 'Usually pn can be pnXYZ where XYZ are the feature number, useful to create
      experimental environments without crash official development environment'

  AlarmSNSTopicArn:
    Type: String
    Description: ARN of alarm topic

  WebApiDnsName:
    Type: String
    Description: 'The DNS name used for WEB rest API.'
  
  CorsAllowedDomains:
    Type: String
    Description: 'Comma separated list of domains allowed to make cross origin request'

  ContainerImageUri:
    Type: String
    Description: 'Exact container image URI with full repository and image digest'

  MicroserviceNumber:
    Type: Number
    Description: 'Disambiguation useful for load balancer rules'

  TemplateBucketBaseUrl:
    Type: String
    Description: 'The S3 bucket from which to fetch the templates used by this stack.'

  ECSClusterName:
    Type: String
    Description: 'The name of the ECS cluster where the microservice is going to be deployed'

  SubnetsIds:
    Type: String
    Description: 'subnets ids comma separated list. Where to deploy the microservice'

  VpcId:
    Type: String
    Description: 'VpcId where the microservice is going to be deployed'
  
  EcsDefaultSecurityGroup:
    Type: String
    Description: 'Default security group required by infrastructure'

  ApplicationLoadBalancerListenerArn:
    Type: String
    Description: 'Load balancer listener where HTTP endpoints is going to be registered'

  ApplicationLoadBalancerDomain:
    Type: String
    Description: 'Base URL of the load balancer where the service is going to be reachable'

  NetworkLoadBalancerLink:
    Type: String
    Description: 'network load balancer link for API-GW'
  
  LogsKinesisSourceStreamArn:
    Type: String
    Description: 'Kinesis stream that receive logs'
  
  Version:
    Type: String
    Description: 'keep track of used projects commitIds'

  PaperDeliveryDriverCapacitiesTableName:
    Type: String
    Description: 'DynamoDB table name for PaperDeliveryDriverCapacities'

  PaperDeliveryDriverCapacitiesTableArn:
    Type: String
    Description: 'ARN of dynamodb table containing PaperDeliveryDriverCapacities'

  PaperDeliveryDriverUsedCapacitiesTableName:
    Type: String
    Description: 'DynamoDB table name for  PaperDeliveryDriverUsedCapacities'

  PaperDeliveryDriverUsedCapacitiesTableArn:
    Type: String
    Description: 'ARN of dynamodb table containing  PaperDeliveryDriverUsedCapacities'

  PaperDeliveryPrintCapacityTableName:
    Type: String
    Description: 'DynamoDB table name for PaperDeliveryPrintCapacity'

  PaperDeliveryPrintCapacityTableArn:
    Type: String
    Description: 'ARN of dynamodb table containing PaperDeliveryPrintCapacity'

  PaperDeliveryKinesisEventTableName:
    Type: String
    Description: 'DynamoDB table name for PaperDeliveryKinesisEvent'

  PaperDeliveryCounterTableName:
    Type: String
    Description: 'DynamoDB table name for PaperDeliveryCounter'

  PaperDeliveryCounterTableArn:
    Type: String
    Description: 'ARN of dynamodb table containing PaperDeliveryCounter'

  PaperDeliveryKinesisEventTableArn:
    Type: String
    Description: 'ARN of dynamodb table containing PaperDeliveryKinesisEvent'

  PaperDeliveryPrintCapacityCounterTableName:
    Type: String
    Description: 'DynamoDB table name for PaperDeliveryPrintCapacityCounter'

  PaperDeliveryPrintCapacityCounterTtlDuration:
    Type: String
    Default: 60d
    Description: 'DynamoDB PaperDeliveryPrintCapacityCounter ttl duration'

  PaperDeliveryPrintCapacityCounterTableArn:
    Type: String
    Description: 'ARN of dynamodb table containing PaperDeliveryPrintCapacityCounter'

  PaperDeliveryTableName:
    Type: String
    Description: Name of dynamodb table containing paper deliveries workflow

  PaperDeliveryTableArn:
    Type: String
    Description: ARN of dynamodb table containing paper deliveries workflow

  PaperDeliveryQueryLimit:
    Type: Number
    Default: 1000
    Description: 'Query limit for paper delivery table'

  PaperDeliverySenderLimitTableName:
    Type: String
    Description: 'DynamoDB table name for PaperDeliverySenderLimit'

  PaperDeliverySenderLimitTableArn:
    Type: String
    Description: 'ARN of dynamodb table containing PaperDeliverySenderLimit'

  PaperDeliveryUsedSenderLimitTableName:
    Type: String
    Description: 'DynamoDB table name for PaperDeliveryUsedSenderLimit'

  PaperDeliveryUsedSenderLimitTableArn:
    Type: String
    Description: 'ARN of dynamodb table containing PaperDeliveryUsedSenderLimit'

  DeliveryDateDayOfWeek:
    Type: Number
    Description: 'Day of the week for capacity (0=Sunday, 1=Monday, 2=Tuesday, 3=Wednesday, 4=Thursday, 5=Friday, 6=Saturday)'
    Default: 1

  PrintCapacityWeeklyWorkingDays:
    Type: Number
    Description: 'Number of working days in a week'
    Default: 7

  DeliveryDateInterval:
    Type: String
    Description: 'Interval for deliveryDate setting'
    Default: 1d

  PaperDeliveryCutOffDuration:
    Type: String
    Description: 'Cut off duration for paper delivery. available value = 7d (weekly cut-off), 0d (no cut-off))'
    Default: 7d

  PaperDeliveryKinesisRecordsTtlSeconds:
    Type: Number
    Description: 'Kinesis sequence number TTL duration for paper delivery.'
    Default: 86400 # 1 day in seconds

  PaperDeliveryCounterTtlDays:
    Type: Number
    Description: 'Kinesis sequence number TTL duration in days for paper delivery.'
    Default: 14

  VpcCidr:
    Type: String
    Description: 'VPC Cidr default'

  SenderLimitJobLogGroup:
    Type: String
    Description: 'SenderLimit job log group name'

  DriverCapacityJobLogGroup:
    Type: String
    Description: 'DriverCapacity job log group name'

  ResidualCapacityJobLogGroup:
    Type: String
    Description: 'ResidualCapacity job log group name'

  MaxvCpus:   ##TODEFINE in order to set the max number of parallel jobs
    Type: String
    Default: 8
    Description: The maximum number of Amazon EC2 vCPUs that an environment can reach.

  VCPU:     ##TODEFINE in order to set the max number of parallel jobs
    Type: String
    Default: 0.25
    Description: The number of vCPUs reserved for the container.

  ComputeResourceType:
    Type: String
    Default: FARGATE
    AllowedValues:
      - FARGATE_SPOT
      - FARGATE
    Description: Enter FARGATE_SPOT or FARGATE.

  Memory:
    Type: String
    Default: 2048
    Description: The memory hard limit (in MiB) present to the container.

  PnDelayerInputsKinesisDataStreamArn:
    Type: String
    Description: 'pn-delayer_inputs kinesis stream ARN'

  PnDelayerInputsKinesisDataStreamKMSArn:
    Type: String
    Description: 'pn-delayer_inputs kinesis stream KMS ARN'

  JobInputUnifiedDeliveryDriver:
    Type: String
    Default: ' '
    Description: 'Input unifiedDeliveryDriver for the driver capacity job'

  WorkflowStep:
    Type: String
    Default: ' '
    Description: 'Workflow step for delayer jobs - one of: EVALUATE_SENDER_LIMIT,EVALUATE_RESIDUAL_CAPACITY,EVALUATE_DRIVER_CAPACITY'

  JobInputProvinceList:
    Type: String
    Default: ' '
    Description: 'Input Province list for the driver capacity job'

  ActualTenderId:
    Type: String
    Default: ' '
    Description: 'TenderId for the driver capacity job'

  JobInputProvince:
    Type: String
    Default: ' '
    Description: 'Input Province for the sender limit job'

  # OpenApi Bucket params
  MicroserviceBucketName:
    Type: String
    Default: ''
    Description: 'Name of the bucket where the microservice files are copied during deploy'

  MicroserviceBucketBaseKey:
    Type: String
    Default: ''
    Description: 'Base key of the microservice in the s3 bucket'

  LambdaRuntime:
    Type: String
    Default: nodejs20.x
    Description: Runtime for Lambdas.

  KinesisPaperDeliveryLambdaDLQARN:
    Type: String
    Description: 'DLQ ARN for KinesisPaperDeliveryLambda'

  KinesisPaperDeliveryLambdaMaxRetry:
    Type: Number
    Default: 1
    Description: 'Maximum retry attempts for KinesisPaperDeliveryLambda'

  KinesisPaperDeliveryLambdaBatchSize:
    Type: Number
    Default: 25
    Description: 'Batch size for KinesisPaperDeliveryLambda'

  KinesisPaperDeliveryLambdaName:
    Type: String
    Description: 'PaperDeliveryLambda function name'

  KinesisPaperDeliveryLambdaMaxBatchWindowInSeconds:
    Type: Number
    Default: 20
    Description: 'Maximum batching window in seconds for KinesisPaperDeliveryLambda'

  DelayerToPaperChannelLambdaCron:
    Type: String
    Default: '0/15 * * * ? *'
    Description: 'Cron expression for DelayerToPaperChannelLambda'

  DelayerToPaperChannelLambdaName:
    Type: String
    Description: 'DelayerToPaperChannelLambda function name'

  DelayerToPaperChannelQueueARN:
    Type: String
    Description: Events from pn-delayer TO pn-paper-channel queue ARN

  DelayerToPaperChannelQueueQueueURL:
    Type: String
    Description: Events from pn-delayer TO pn-paper-channel queue URL

  DelayerToPaperChannelRuleState:
    Type: String
    Default: DISABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: 'State of the DelayerToPaperChannelRule'

  PaperDeliveryPriorityParameterName:
    Type: String
    Description: 'parameter name for paper delivery priority details'

  PaperDeliveryPrintCapacityCounterTtlDays:
    Type: Number
    Default: 60
    Description: 'TTL in days for PaperDeliveryPrintCapacityCounter'

  TestDelayerBucketName:
    Type: String
    Description: 'Name of bucket for delayer tests automation'

  TestDelayerBucketArn:
    Type: String
    Description: 'Arn of bucket for delayer tests automation'

  TestDelayerKmsBucketArn:
    Type: String
    Description: 'Arn of kms bucket for delayer tests automation'

  TestDelayerObjectKeyBucket:
    Type: String
    Description: 'TestDelayerLambda object key of bucket'
    Default: 'example.csv'

  TestDelayerLambdaName:
    Type: String
    Description: 'TestDelayerLambda function name'

  UnifiedDeliveryDriverProvinceParameter:
    Type: String
    Description: 'Parameter name for UnifiedDeliveryDriverProvinceParameter'

  DelayerStartWorkflowCron:
    Type: String
    Default: '0 3 * * ? 1'
    Description: 'Cron expression for DelayerStartWorkflowRule'

  DelayerStartWorkflowRuleState:
    Type: String
    Default: DISABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: 'State of the DelayerStartWorkflowRule'

Resources:

  SenderLimitComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      Type: MANAGED
      ServiceRole: !Ref SenderLimitServiceRole
      ComputeEnvironmentName: !Sub '${ProjectName}-delayer-sender-limit-compute-environment'
      ComputeResources:
        MaxvCpus: !Ref MaxvCpus
        Type: !Ref ComputeResourceType
        SecurityGroupIds:
          - !Ref SenderLimitSecurityGroup
        Subnets: !Split [ ",", !Ref SubnetsIds ]
      State: ENABLED

  SenderLimitJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      PropagateTags: true
      JobDefinitionName: !Sub '${ProjectName}-delayer-sender-limit-job-definition'
      ContainerProperties:
        Image: !Ref ContainerImageUri
        FargatePlatformConfiguration:
          PlatformVersion: LATEST
        ResourceRequirements:
          - Value: !Ref VCPU
            Type: VCPU
          - Value: !Ref Memory
            Type: MEMORY
        JobRoleArn: !GetAtt "SenderLimitTaskExecutionRole.Arn"
        ExecutionRoleArn: !GetAtt "SenderLimitTaskExecutionRole.Arn"
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-group: !Ref "SenderLimitJobLogGroup"
            awslogs-region: !Ref AWS::Region
            awslogs-stream-prefix: !Sub '${ProjectName}-delayer-sender-limit-job-logs'
        Environment:
          - Name: AWS_REGIONCODE
            Value: !Ref AWS::Region
          - Name: PN_DELAYER_DAO_PAPERDELIVERYCOUNTERTABLENAME
            Value: !Ref PaperDeliveryCounterTableName
          - Name: PN_DELAYER_DAO_PAPERDELIVERYSENDERLIMITTABLENAME
            Value: !Ref PaperDeliverySenderLimitTableName
          - Name: PN_DELAYER_DAO_PAPERDELIVERYUSEDSENDERLIMITTABLENAME
            Value: !Ref PaperDeliveryUsedSenderLimitTableName
          - Name: PN_DELAYER_DAO_PAPERDELIVERYDRIVERCAPACITIESTABLENAME
            Value: !Ref PaperDeliveryDriverCapacitiesTableName
          - Name: PN_DELAYER_DAO_PAPERDELIVERYTABLENAME
            Value: !Ref PaperDeliveryTableName
          - Name: PN_DELAYER_EVALUATESENDERLIMITJOBINPUT_PROVINCE
            Value: !Ref JobInputProvince
          - Name: PN_DELAYER_ACTUALTENDERID
            Value: !Ref ActualTenderId
          - Name: PN_DELAYER_WORKFLOWSTEP
            Value: !Ref WorkflowStep

      PlatformCapabilities:
        - FARGATE
      Tags:
        Service: Batch
        Name: JobDefinitionTag
        Expected: MergeTag

  SenderLimitJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref SenderLimitComputeEnvironment
      State: ENABLED
      Priority: 1
      JobQueueName: pn-delayer-sender-limit-job-queue

  SenderLimitServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: batch.amazonaws.com
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole

  SenderLimitTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-delayer-sender-limit-taskexec-role'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: "sts:AssumeRole"
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
      Path: /
      Policies:
        - PolicyName: AmazonECSTaskExecutionRolePolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "ecr:GetAuthorizationToken"
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:BatchGetImage"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"
              - Effect: Allow
                Action:
                  - dynamodb:Query
                  - dynamodb:BatchGetItem
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:BatchWriteItem
                Resource:
                  - !Sub "${PaperDeliveryCounterTableArn}"
                  - !Sub "${PaperDeliveryCounterTableArn}/*"
                  - !Sub "${PaperDeliverySenderLimitTableArn}"
                  - !Sub "${PaperDeliverySenderLimitTableArn}/*"
                  - !Sub "${PaperDeliveryUsedSenderLimitTableArn}"
                  - !Sub "${PaperDeliveryUsedSenderLimitTableArn}/*"
                  - !Sub "${PaperDeliveryDriverCapacitiesTableArn}"
                  - !Sub "${PaperDeliveryDriverCapacitiesTableArn}/*"
                  - !Sub "${PaperDeliveryTableArn}"
                  - !Sub "${PaperDeliveryTableArn}/*"

  SenderLimitSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Batch Security Group
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: !Ref VpcCidr
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: "0.0.0.0/0"

  ResidualCapacityComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      Type: MANAGED
      ServiceRole: !Ref ResidualCapacityServiceRole
      ComputeEnvironmentName: !Sub '${ProjectName}-delayer-residual-capacity-compute-environment'
      ComputeResources:
        MaxvCpus: !Ref MaxvCpus
        Type: !Ref ComputeResourceType
        SecurityGroupIds:
          - !Ref ResidualCapacitySecurityGroup
        Subnets: !Split [ ",", !Ref SubnetsIds ]
      State: ENABLED

  ResidualCapacityJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      PropagateTags: true
      JobDefinitionName: !Sub '${ProjectName}-delayer-residual-capacity-job-definition'
      ContainerProperties:
        Image: !Ref ContainerImageUri
        FargatePlatformConfiguration:
          PlatformVersion: LATEST
        ResourceRequirements:
          - Value: !Ref VCPU
            Type: VCPU
          - Value: !Ref Memory
            Type: MEMORY
        JobRoleArn: !GetAtt "ResidualCapacityTaskExecutionRole.Arn"
        ExecutionRoleArn: !GetAtt "ResidualCapacityTaskExecutionRole.Arn"
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-group: !Ref "ResidualCapacityJobLogGroup"
            awslogs-region: !Ref AWS::Region
            awslogs-stream-prefix: !Sub '${ProjectName}-delayer-residual-capacity-logs'
        Environment:
          - Name: PN_DELAYER_DAO_PAPERDELIVERYDRIVERCAPACITIESTABLENAME
            Value: !Ref PaperDeliveryDriverCapacitiesTableName
          - Name: PN_DELAYER_DAO_PAPERDELIVERYDRIVERUSEDCAPACITIESTABLENAME
            Value: !Ref PaperDeliveryDriverUsedCapacitiesTableName
          - Name: PN_DELAYER_DAO_PAPERDELIVERYPRINTCAPACITYTABLENAME
            Value: !Ref PaperDeliveryPrintCapacityTableName
          - Name: PN_DELAYER_DAO_PAPERDELIVERYPRINTCAPACITYCOUNTERTABLENAME
            Value: !Ref PaperDeliveryPrintCapacityCounterTableName
          - Name: PN_DELAYER_DAO_PAPERDELIVERYTABLENAME
            Value: !Ref PaperDeliveryTableName
          - Name: PN_DELAYER_DELIVERYDATEDAYOFWEEK
            Value: !Ref DeliveryDateDayOfWeek
          - Name: AWS_REGIONCODE
            Value: !Ref AWS::Region
          - Name: PN_DELAYER_ACTUALTENDERID
            Value: !Ref ActualTenderId
          - Name: PN_DELAYER_WORKFLOWSTEP
            Value: !Ref WorkflowStep
          - Name: PN_DELAYER_DAO_PAPERDELIVERYPRINTCAPACITYCOUNTERTTLDURATION
            Value: !Ref PaperDeliveryPrintCapacityCounterTtlDuration
          - Name: PN_DELAYER_PRINTCAPACITYWEEKLYWORKINGDAYS
            Value: !Ref PrintCapacityWeeklyWorkingDays

      PlatformCapabilities:
        - FARGATE
      Tags:
        Service: Batch
        Name: JobDefinitionTag
        Expected: MergeTag

  ResidualCapacityJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref ResidualCapacityComputeEnvironment
      State: ENABLED
      Priority: 1
      JobQueueName: pn-delayer-residual-capacity-job-queue

  ResidualCapacityServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: batch.amazonaws.com
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole

  ResidualCapacityTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-delayer-residual-capacity-taskexec-role'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: "sts:AssumeRole"
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
      Path: /
      Policies:
        - PolicyName: AmazonECSTaskExecutionRolePolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "ecr:GetAuthorizationToken"
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:BatchGetImage"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"
              - Effect: Allow
                Action:
                  - dynamodb:Query
                  - dynamodb:BatchGetItem
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:BatchWriteItem
                Resource:
                  - !Sub "${PaperDeliveryDriverCapacitiesTableArn}"
                  - !Sub "${PaperDeliveryDriverCapacitiesTableArn}/*"
                  - !Sub "${PaperDeliveryDriverUsedCapacitiesTableArn}"
                  - !Sub "${PaperDeliveryDriverUsedCapacitiesTableArn}/*"
                  - !Sub "${PaperDeliveryPrintCapacityTableArn}"
                  - !Sub "${PaperDeliveryPrintCapacityTableArn}/*"
                  - !Sub "${PaperDeliveryPrintCapacityCounterTableArn}"
                  - !Sub "${PaperDeliveryPrintCapacityCounterTableArn}/*"
                  - !Sub "${PaperDeliveryTableArn}"
                  - !Sub "${PaperDeliveryTableArn}/*"

  ResidualCapacitySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Batch Security Group
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: !Ref VpcCidr
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: "0.0.0.0/0"

  DriverCapacityComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      Type: MANAGED
      ServiceRole: !Ref DriverCapacityServiceRole
      ComputeEnvironmentName: !Sub '${ProjectName}-delayer-driver-capacity-compute-environment'
      ComputeResources:
        MaxvCpus: !Ref MaxvCpus
        Type: !Ref ComputeResourceType
        SecurityGroupIds:
          - !Ref DriverCapacitySecurityGroup
        Subnets: !Split [",", !Ref SubnetsIds]
      State: ENABLED

  DriverCapacityJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      PropagateTags: true
      JobDefinitionName: !Sub '${ProjectName}-delayer-driver-capacity-job-definition'
      ContainerProperties:
        Image: !Ref ContainerImageUri
        FargatePlatformConfiguration:
          PlatformVersion: LATEST
        ResourceRequirements:
          - Value: !Ref VCPU
            Type: VCPU
          - Value: !Ref Memory
            Type: MEMORY
        JobRoleArn: !GetAtt "DriverCapacityTaskExecutionRole.Arn"
        ExecutionRoleArn: !GetAtt "DriverCapacityTaskExecutionRole.Arn"
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-group: !Ref "DriverCapacityJobLogGroup"
            awslogs-region: !Ref AWS::Region
            awslogs-stream-prefix: !Sub '${ProjectName}-delayer-driver-capacity-logs'
        Environment:
          - Name: PN_DELAYER_DAO_PAPERDELIVERYDRIVERCAPACITIESTABLENAME
            Value: !Ref PaperDeliveryDriverCapacitiesTableName
          - Name: PN_DELAYER_DAO_PAPERDELIVERYDRIVERUSEDCAPACITIESTABLENAME
            Value: !Ref PaperDeliveryDriverUsedCapacitiesTableName
          - Name: PN_DELAYER_DAO_PAPERDELIVERYPRINTCAPACITYTABLENAME
            Value: !Ref PaperDeliveryPrintCapacityTableName
          - Name: PN_DELAYER_DAO_PAPERDELIVERYPRINTCAPACITYCOUNTERTABLENAME
            Value: !Ref PaperDeliveryPrintCapacityCounterTableName
          - Name: PN_DELAYER_DAO_PAPERDELIVERYTABLENAME
            Value: !Ref PaperDeliveryTableName
          - Name: PN_DELAYER_DELIVERYDATEDAYOFWEEK
            Value: !Ref DeliveryDateDayOfWeek
          - Name: AWS_REGIONCODE
            Value: !Ref AWS::Region
          - Name: PN_DELAYER_EVALUATEDRIVERCAPACITYJOBINPUT_UNIFIEDDELIVERYDRIVER
            Value: !Ref JobInputUnifiedDeliveryDriver
          - Name: PN_DELAYER_EVALUATEDRIVERCAPACITYJOBINPUT_PROVINCELIST
            Value: !Ref JobInputProvinceList
          - Name: PN_DELAYER_ACTUALTENDERID
            Value: !Ref ActualTenderId
          - Name: PN_DELAYER_WORKFLOWSTEP
            Value: !Ref WorkflowStep
          - Name: PN_DELAYER_DAO_PAPERDELIVERYPRINTCAPACITYCOUNTERTTLDURATION
            Value: !Ref PaperDeliveryPrintCapacityCounterTtlDuration
          - Name: PN_DELAYER_PRINTCAPACITYWEEKLYWORKINGDAYS
            Value: !Ref PrintCapacityWeeklyWorkingDays

      PlatformCapabilities:
        - FARGATE
      Tags:
        Service: Batch
        Name: JobDefinitionTag
        Expected: MergeTag

  ## JobQueue
  DriverCapacityJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref DriverCapacityComputeEnvironment
      State: ENABLED
      Priority: 1
      JobQueueName: !Sub '${ProjectName}-delayer-driver-capacity-job-queue'

  DriverCapacityServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: batch.amazonaws.com
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole

  DriverCapacityTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-delayer-driver-capacity-job-taskexec-role'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: "sts:AssumeRole"
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
      Path: /
      Policies:
        - PolicyName: AmazonECSTaskExecutionRolePolicy
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                - "ecr:GetAuthorizationToken"
                - "ecr:BatchCheckLayerAvailability"
                - "ecr:GetDownloadUrlForLayer"
                - "ecr:BatchGetImage"
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
              Resource: "*"
            - Effect: Allow
              Action:
                - dynamodb:Query
                - dynamodb:BatchGetItem
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:BatchWriteItem
              Resource:
                - !Sub "${PaperDeliveryDriverCapacitiesTableArn}"
                - !Sub "${PaperDeliveryDriverCapacitiesTableArn}/*"
                - !Sub "${PaperDeliveryDriverUsedCapacitiesTableArn}"
                - !Sub "${PaperDeliveryDriverUsedCapacitiesTableArn}/*"
                - !Sub "${PaperDeliveryPrintCapacityTableArn}"
                - !Sub "${PaperDeliveryPrintCapacityTableArn}/*"
                - !Sub "${PaperDeliveryPrintCapacityCounterTableArn}"
                - !Sub "${PaperDeliveryPrintCapacityCounterTableArn}/*"
                - !Sub "${PaperDeliveryTableArn}"
                - !Sub "${PaperDeliveryTableArn}/*"

  DriverCapacitySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Batch Security Group
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: !Ref VpcCidr
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: "0.0.0.0/0"

  DelayerMicroserviceCloudWatchDashboard:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/microservice-cloudwatch-dashboard.yaml"
      Parameters:
        DashboardName: !Sub "${ProjectName}-delayer"
        DynamoDBTableNames: !Join
          - ','
          - - !Ref PaperDeliveryDriverCapacitiesTableName
            - !Ref PaperDeliveryDriverUsedCapacitiesTableName
            - !Ref PaperDeliveryTableName
            - !Ref PaperDeliveryCounterTableName
            - !Ref PaperDeliverySenderLimitTableName
            - !Ref PaperDeliveryUsedSenderLimitTableName
            - !Ref PaperDeliveryPrintCapacityTableName
            - !Ref PaperDeliveryPrintCapacityCounterTableName
        LogGroupsNames: !Join
          - ','
          - - !Sub '/aws/ecs/${ProjectName}-delayer-sender-limit-job'
            - !Sub '/aws/ecs/${ProjectName}-delayer-residual-capacity-job'
            - !Sub '/aws/ecs/${ProjectName}-delayer-driver-capacity-job'

  PnDelayerAlarmTopicPublisherRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-delayer-alarm-topic-publisher-role'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: "sts:AssumeRole"
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
      Path: /
      Policies:
        - PolicyName: !Sub '${ProjectName}-delayer-alarm-topic-publisher-policy'
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "sns:Publish"
                Resource: !Ref AlarmSNSTopicArn

  ### Enable sending notifications to SNS topic when the job is in failed status.
  BatchBridgeStateRule:
   Type: AWS::Events::Rule
   Properties:
     Description: The EventBridge rule to match Batch state change
     RoleArn: !GetAtt PnDelayerAlarmTopicPublisherRole.Arn
     EventPattern:
       source:
         - aws.batch
       detail-type:
         - Batch Job State Change
       detail:
         status:
           - FAILED
         jobDefinition:
          - !Ref DriverCapacityJobDefinition
          - !Ref ResidualCapacityJobDefinition
          - !Ref SenderLimitJobDefinition
     State: ENABLED
     Targets:
       - Arn: !Ref AlarmSNSTopicArn
         Id: !Sub "${ProjectName}-delayer"

  # Create alarm
  FailedInvocationMetricAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${ProjectName}-delayer-FailedInvocation-Alarm"
      AlarmDescription: "CloudWatch alarm for when pn-delayer job fails."
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref AlarmSNSTopicArn
      OKActions:
        - !Ref AlarmSNSTopicArn
      Dimensions:
        - Name: RuleName
          Value: !Ref BatchBridgeStateRule
      DatapointsToAlarm: 1
      MetricName: "Invocations"
      Namespace: "AWS/Events"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 12 # 1 hour
      Period: 300 # 5 minutes
      Statistic: Sum
      Threshold: 1

  SenderLimitJobErrorFatalLogsMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref SenderLimitJobLogGroup
      FilterPattern: '?ERROR ?FATAL ?CRITICAL'
      MetricTransformations:
        - MetricValue: 1
          MetricNamespace: "ErrorFatalLogs"
          MetricName: !Sub "${ProjectName}-delayer-sender-limit-job-ErrorFatalMetric"

  SenderLimitErrorFatalLogsMetricAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn: SenderLimitJobErrorFatalLogsMetricFilter
    Properties:
      AlarmName: !Sub "${ProjectName}-delayer-sender-limit-job-ErrorFatalLogs-Alarm"
      AlarmDescription: "CloudWatch alarm for when LogSaver LogGroup has ERROR or FATAL line."
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref AlarmSNSTopicArn
      OKActions:
        - !Ref AlarmSNSTopicArn
      DatapointsToAlarm: 1
      MetricName: !Sub "${ProjectName}-delayer-sender-limit-job-ErrorFatalMetric"
      Namespace: "ErrorFatalLogs"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 60
      Period: 60
      Statistic: Sum
      Threshold: 1

  ResidualCapacityJobErrorFatalLogsMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref ResidualCapacityJobLogGroup
      FilterPattern: '?ERROR ?FATAL ?CRITICAL'
      MetricTransformations:
        - MetricValue: 1
          MetricNamespace: "ErrorFatalLogs"
          MetricName: !Sub "${ProjectName}-delayer-residual-capacity-job-ErrorFatalMetric"

  ResidualCapacityJobErrorFatalLogsMetricAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn: ResidualCapacityJobErrorFatalLogsMetricFilter
    Properties:
      AlarmName: !Sub "${ProjectName}-delayer-residual-capacity-ErrorFatalLogs-Alarm"
      AlarmDescription: "CloudWatch alarm for when LogSaver LogGroup has ERROR or FATAL line."
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref AlarmSNSTopicArn
      OKActions:
        - !Ref AlarmSNSTopicArn
      DatapointsToAlarm: 1
      MetricName: !Sub "${ProjectName}-delayer-residual-capacity-job-ErrorFatalMetric"
      Namespace: "ErrorFatalLogs"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 60
      Period: 60
      Statistic: Sum
      Threshold: 1

  DriverCapacityErrorFatalLogsMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref DriverCapacityJobLogGroup
      FilterPattern: '?ERROR ?FATAL ?CRITICAL'
      MetricTransformations:
        - MetricValue: 1
          MetricNamespace: "ErrorFatalLogs"
          MetricName: !Sub "${ProjectName}-delayer-ErrorFatalMetric"

  DriverCapacityErrorFatalLogsMetricAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn: DriverCapacityErrorFatalLogsMetricFilter
    Properties:
      AlarmName: !Sub "${ProjectName}-delayer-driver-capacity-job-ErrorFatalLogs-Alarm"
      AlarmDescription: "CloudWatch alarm for when LogSaver LogGroup has ERROR or FATAL line."
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref AlarmSNSTopicArn
      OKActions:
        - !Ref AlarmSNSTopicArn
      DatapointsToAlarm: 1
      MetricName: !Sub "${ProjectName}-delayer-driver-capacity-job-ErrorFatalMetric"
      Namespace: "ErrorFatalLogs"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 60
      Period: 60
      Statistic: Sum
      Threshold: 1

  PnCoreEventBusToDelayerInputsKinesis:
    Type: AWS::Events::Rule
    Properties:
      Description: Route Events from pn-core-event-bus to kinesis
      RoleArn: !GetAtt "DelayerInputsRole.Arn"
      EventBusName: !Sub '${ProjectName}-CoreEventBus'
      EventPattern:
        detail-type: [ "PreparePhaseOneOutcomeEvent" ]
      Targets:
        - Arn: !Ref PnDelayerInputsKinesisDataStreamArn
          Id: !Sub ${ProjectName}-DelayerInputsKinesisDataStream
          DeadLetterConfig:
            Arn: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:pn-CoreEventBus-DLQ

  DelayerInputsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
        Version: "2012-10-17"
      Policies:
        - PolicyName: !Sub ${ProjectName}-DelayerInputs-eventBusRolePolicy
          PolicyDocument:
            Statement:
              - Sid: KMSAllowList
                Action:
                  - kms:Decrypt
                  - kms:Encrypt
                  - kms:GenerateDataKey
                Effect: Allow
                Resource:
                  - !Ref PnDelayerInputsKinesisDataStreamKMSArn
              - Sid: putEventsToKinesis
                Effect: Allow
                Action:
                  - kinesis:PutRecords
                  - kinesis:PutRecord
                Resource:
                  - !Ref PnDelayerInputsKinesisDataStreamArn

  #########################################################
  ###         KinesisPaperDeliveryLambda                ###
  #########################################################

  KinesisPaperDeliveryLambdaSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub '${KinesisPaperDeliveryLambdaName}-sec-group'
      VpcId: !Ref VpcId

  # Lambda function
  KinesisPaperDeliveryLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref KinesisPaperDeliveryLambdaName
      Runtime: !Ref LambdaRuntime
      Handler: "index.handler"
      Code:
        S3Bucket: !Ref MicroserviceBucketName
        S3Key: !Sub "${MicroserviceBucketBaseKey}/functions_zip/kinesisPaperDeliveryLambda.zip"
      Role: !GetAtt KinesisPaperDeliveryLambdaRole.Arn
      Environment:
        Variables:
          REGION: !Sub ${AWS::Region}
          KINESIS_PAPERDELIVERY_TABLE: !Ref PaperDeliveryTableName
          KINESIS_PAPERDELIVERY_EVENTTABLE: !Ref PaperDeliveryKinesisEventTableName
          KINESIS_PAPERDELIVERY_COUNTERTABLE: !Ref PaperDeliveryCounterTableName
          KINESIS_BATCHSIZE: !Ref KinesisPaperDeliveryLambdaBatchSize
          KINESIS_EVENTSRECORDTTLSECONDS: !Ref PaperDeliveryKinesisRecordsTtlSeconds
          KINESIS_PAPERDELIVERY_COUNTERTTLDAYS: !Ref PaperDeliveryCounterTtlDays
          KINESIS_PAPERDELIVERY_DELIVERYDATEDAYOFWEEK: !Ref DeliveryDateDayOfWeek
      TracingConfig:
        Mode: Active
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:339249233099:layer:LambdaInsightsExtension:13"
      Timeout: 15

  # Lambda function role
  KinesisPaperDeliveryLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-kinesisPaperDeliveryLambdaRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  # Lambda function IAM policy
  KinesisPaperDeliveryLambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${ProjectName}-kinesisPaperDeliveryLambdaPolicy
      Roles:
        - !Ref KinesisPaperDeliveryLambdaRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kinesis:DescribeStream
              - kinesis:DescribeStreamSummary
              - kinesis:GetShardIterator
              - kinesis:GetRecords
              - kinesis:ListShards
              - kinesis:ListStreams
              - kinesis:SubscribeToShard
            Resource: !Ref PnDelayerInputsKinesisDataStreamArn
          - Effect: Allow
            Action: kms:Decrypt
            Resource: !Ref PnDelayerInputsKinesisDataStreamKMSArn
          - Effect: Allow
            Action: dynamodb:BatchWriteItem
            Resource:
              - !Ref PaperDeliveryTableArn
          - Effect: Allow
            Action: dynamodb:BatchWriteItem
            Resource:
              - !Ref PaperDeliveryCounterTableArn
          - Effect: Allow
            Action:
              - sqs:ChangeMessageVisibility
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:SendMessage
            Resource:
              !Ref KinesisPaperDeliveryLambdaDLQARN
          - Effect: Allow
            Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
            Resource: !Ref PaperDeliveryKinesisEventTableArn


  PaperDeliveryLambdaKinesisSource:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: !Sub ${KinesisPaperDeliveryLambdaBatchSize}
      BisectBatchOnFunctionError: true
      EventSourceArn: !Ref PnDelayerInputsKinesisDataStreamArn
      FunctionName: !Ref KinesisPaperDeliveryLambda
      FunctionResponseTypes:
        - ReportBatchItemFailures
      MaximumBatchingWindowInSeconds: !Sub ${KinesisPaperDeliveryLambdaMaxBatchWindowInSeconds}
      MaximumRetryAttempts: !Ref KinesisPaperDeliveryLambdaMaxRetry
      StartingPosition: TRIM_HORIZON
      DestinationConfig:
        OnFailure:
          Destination: !Ref KinesisPaperDeliveryLambdaDLQARN

  KinesisPaperDeliveryLambdaAlarms:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/lambda-alarms.yaml"
      Parameters:
        FunctionName: !Ref KinesisPaperDeliveryLambda
        AlarmSNSTopicArn: !Ref AlarmSNSTopicArn


  #########################################################
  ###         DelayerToPaperChannelLambda                ###
  #########################################################

  DelayerToPaperChannelLambdaSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub '${DelayerToPaperChannelLambdaName}-sec-group'
      VpcId: !Ref VpcId

  # Lambda function
  DelayerToPaperChannelLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref DelayerToPaperChannelLambdaName
      Runtime: !Ref LambdaRuntime
      Handler: "index.handler"
      Code:
        S3Bucket: !Ref MicroserviceBucketName
        S3Key: !Sub "${MicroserviceBucketBaseKey}/functions_zip/delayerToPaperChannelLambda.zip"
      Role: !GetAtt DelayerToPaperChannelLambdaRole.Arn
      Environment:
        Variables:
          REGION: !Sub ${AWS::Region}
          PAPER_DELIVERY_TABLENAME: !Ref PaperDeliveryTableName
          PAPER_DELIVERY_QUERYLIMIT: !Ref PaperDeliveryQueryLimit
          PAPER_DELIVERY_PRINTCAPACITY_TABLENAME: !Ref PaperDeliveryPrintCapacityTableName
          PAPER_DELIVERY_COUNTER_TABLENAME: !Ref PaperDeliveryCounterTableName
          PAPER_DELIVERY_PRINTCAPACITYCOUNTER_TABLENAME: !Ref PaperDeliveryPrintCapacityCounterTableName
          PAPER_DELIVERY_PRIORITY_PARAMETER: !Ref PaperDeliveryPriorityParameterName
          PAPER_DELIVERY_PRINTCAPACITYCOUNTER_TTLDAYS: !Ref PaperDeliveryPrintCapacityCounterTtlDays
          DELAYERTOPAPERCHANNEL_QUEUEURL: !Ref DelayerToPaperChannelQueueQueueURL
          PN_DELAYER_DELIVERYDATEDAYOFWEEK: !Ref DeliveryDateDayOfWeek
          PN_DELAYER_WEEKLY_WORKING_DAYS: !Ref PrintCapacityWeeklyWorkingDays
      TracingConfig:
        Mode: Active
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:339249233099:layer:LambdaInsightsExtension:13"
      Timeout: 15

  # Lambda function role
  DelayerToPaperChannelLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-DelayerToPaperChannelLambdaRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  # Lambda function IAM policy
  DelayerToPaperChannelLambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${ProjectName}-DelayerToPaperChannelLambdaPolicy
      Roles:
        - !Ref DelayerToPaperChannelLambdaRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:Query
              - dynamodb:BatchWriteItem
              - dynamodb:DeleteItem
            Resource:
              - !Ref PaperDeliveryTableArn
          - Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:BatchGetItem
              - dynamodb:UpdateItem
              - dynamodb:TransactWriteItems
            Resource: !Ref PaperDeliveryPrintCapacityCounterTableArn
          - Effect: Allow
            Action:
              - sqs:SendMessage
            Resource: !Ref  DelayerToPaperChannelQueueARN

  DelayerToPaperChannelLambdaAlarms:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/lambda-alarms.yaml"
      Parameters:
        FunctionName: !Ref DelayerToPaperChannelLambda
        AlarmSNSTopicArn: !Ref AlarmSNSTopicArn

  # EventBridge Rule for scheduling the Lambda
  DelayerToPaperChannelScheduleRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub '${ProjectName}-delayerToPaperChannelScheduleRule'
      ScheduleExpression: !Sub cron(${DelayerToPaperChannelLambdaCron})
      State: !Ref DelayerToPaperChannelRuleState
      Targets:
        - Arn: !GetAtt DelayerToPaperChannelLambda.Arn
          Id: PnDelayerToPaperChannelLambdaTarget

  PermissionForDelayerToPaperChannelLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt DelayerToPaperChannelLambda.Arn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt DelayerToPaperChannelScheduleRule.Arn

  #########################################################
  ###         TestDelayerLambda                ###
  #########################################################

  TestDelayerLambdaSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub '${TestDelayerLambdaName}-sec-group'
      VpcId: !Ref VpcId

  # Lambda function
  TestDelayerLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref TestDelayerLambdaName
      Runtime: !Ref LambdaRuntime
      Handler: "index.handler"
      Code:
        S3Bucket: !Ref MicroserviceBucketName
        S3Key: !Sub "${MicroserviceBucketBaseKey}/functions_zip/testDelayerLambda.zip"
      Role: !GetAtt TestDelayerLambdaRole.Arn
      Environment:
        Variables:
          REGION: !Sub ${AWS::Region}
          BUCKET_NAME: !Ref TestDelayerBucketName
          OBJECT_KEY: !Ref TestDelayerObjectKeyBucket
      TracingConfig:
        Mode: Active
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:339249233099:layer:LambdaInsightsExtension:13"
      Timeout: 15

  # Lambda function role
  TestDelayerLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-testDelayerLambdaRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  # Lambda function IAM policy
  TestDelayerLambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${ProjectName}-testDelayerLambdaPolicy
      Roles:
        - !Ref TestDelayerLambdaRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:BatchWriteItem
              - dynamodb:Query
            Resource:
              - !Sub "${PaperDeliveryTableArn}"
              - !Sub "${PaperDeliveryTableArn}/*"
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:HeadObject
              - s3:ListBucket
              - s3:GetObjectTagging
            Resource:
              - !Sub "${TestDelayerBucketArn}"
              - !Sub "${TestDelayerBucketArn}/*"
          - Sid: DecryptObjects
            Effect: Allow
            Action:
              - kms:Decrypt
              - kms:DescribeKey
            Resource:
              - !Sub "${TestDelayerKmsBucketArn}"

  DelayerStartWorkflowScheduleRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub '${ProjectName}-delayerStartWorkflowScheduleRule'
      ScheduleExpression: !Sub cron(${DelayerStartWorkflowCron})
      State: !Ref DelayerStartWorkflowRuleState
      Targets:
        - Id: StepFunctionTarget
          Arn: !Ref PaperDeliveryStateMachine
          Input: !Sub |
            {
              "PAPERDELIVERY_TABLENAME": "${PaperDeliveryTableName}",
              "PAPERDELIVERYDRIVERCAPACITIES_TABLENAME": "${PaperDeliveryDriverCapacitiesTableName}",
              "PAPERDELIVERYDRIVERUSEDCAPACITIES_TABLENAME": "${PaperDeliveryDriverUsedCapacitiesTableName}"
              "PAPERDELIVERYCOUNTER_TABLENAME": "${PaperDeliveryCounterTableName}",
              "PAPERDELIVERYSENDERLIMIT_TABLENAME": "${PaperDeliverySenderLimitTableName}",
              "PAPERDELIVERYPRINTCAPACITY_TABLENAME": "${PaperDeliveryPrintCapacityTableName}",
              "PAPERDELIVERYPRINTCAPACITYCOUNTER_TABLENAME": "${PaperDeliveryPrintCapacityCounterTableName}"
            }
  DelayerStartWorkflowScheduleRuleRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-delayerStartWorkflowScheduleRuleRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  DelayerStartWorkflowScheduleRulePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${ProjectName}-delayerStartWorkflowScheduleRulePolicy
      Roles:
        - !Ref PaperDeliveryStateMachineRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - states:StartExecution
            Resource:
             - !Ref PaperDeliveryStateMachine

  PaperDeliveryStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: BatchWorkflowStateMachine
      RoleArn: !GetAtt PaperDeliveryStateMachineRole.Arn
      DefinitionString: !Sub |
        {
          "Comment": "Paper Delivery State Machine",
          "StartAt": "GetUnifiedDeliveryDriverProvinceParameter",
          "States": {
            "Fail": {
              "Type": "Fail"
            },
            "GetUnifiedDeliveryDriverProvinceParameter": {
              "Type": "Task",
              "QueryLanguage": "JSONata",
              "Arguments": {
                "Name": "/config/pn-delayer/unifiedDeliveryDriver-province"
              },
              "Resource": "arn:aws:states:::aws-sdk:ssm:getParameter",
              "Next": "Success",
              "Retry": [
                {
                  "ErrorEquals": [
                    "States.ALL"
                  ],
                  "BackoffRate": 2,
                  "IntervalSeconds": 1,
                  "MaxAttempts": 3
                }
              ],
              "Catch": [
                {
                  "ErrorEquals": [
                    "States.ALL"
                  ],
                  "Next": "Fail"
                }
              ]
            },
            "Success": {
              "Type": "Succeed"
            }
          }
        }

  PaperDeliveryStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-paperDeliveryStateMachineRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

    # Lambda function IAM policy
  PaperDeliveryStateMachinePolicy:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: !Sub ${ProjectName}-paperDeliveryStateMachinePolicy
        Roles:
          - !Ref PaperDeliveryStateMachineRole
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${UnifiedDeliveryDriverProvinceParameter}